{
  "timestamp": "2024-11-13T16:23:12.082171",
  "model_name": "gpt-4",
  "total_queries": 384,
  "successful_predictions": 242,
  "failed_predictions": 142,
  "average_ast_score": 0.5139756944444457,
  "per_schema_scores": {
    "0": 0.54375,
    "1": 0.5636718749999999,
    "2": 0.484765625,
    "3": 0.4674479166666666,
    "4": 0.45390624999999984,
    "5": 0.5703124999999998
  },
  "detailed_results": [
    {
      "query_index": 0,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes from the menu that have a similar name or description to 'healthy cuisine', and show their average price.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu that have a similar name or description to 'healthy cuisine', and show their average price.",
        "target_collection": "RestaurantMenu",
        "search_query": "healthy cuisine",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:=true"
    },
    {
      "query_index": 1,
      "database_schema_index": 0,
      "natural_language_query": "Find me all vegetarian dishes priced under $20 that are similar to the dish 'Green Delight' for a recommendation, grouped by the chef who created them.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all vegetarian dishes priced under $20 that are similar to the dish 'Green Delight' for a recommendation, grouped by the chef who created them.",
        "target_collection": "RestaurantMenu",
        "search_query": "dishes similar to 'Green Delight'",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "chefName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: =true,price"
    },
    {
      "query_index": 2,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes similar to 'vegan pasta' or 'plant-based gnocchi' that are vegetarian and priced above $10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes similar to 'vegan pasta' or 'plant-based gnocchi' that are vegetarian and priced above $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegan pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find dishes similar to 'vegan pasta' or 'plant-based gnocchi' that are vegetarian and priced above $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegan pasta",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 3,
      "database_schema_index": 0,
      "natural_language_query": "Find all dishes on the menu that are similar in nature to \"vegan healthy salads\" and cost less than $10, while making sure they are vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all dishes on the menu that are similar in nature to \"vegan healthy salads\" and cost less than $10, while making sure they are vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegan healthy salads",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "salad"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isVegetarian:=:true'"
    },
    {
      "query_index": 4,
      "database_schema_index": 0,
      "natural_language_query": "Find popular vegetarian dishes that are priced reasonably, considering dishes that resemble ratatouille but under $20.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find popular vegetarian dishes that are priced reasonably, considering dishes that resemble ratatouille but under $20.",
        "target_collection": "RestaurantMenu",
        "search_query": "ratatouille",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20.0
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:true"
    },
    {
      "query_index": 5,
      "database_schema_index": 0,
      "natural_language_query": "Show all vegetarian dishes that are related to salads and cost less than $10. Also, include any dishes synonymous with salads and price around $10, including possible misspelled terms like 'salod'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all vegetarian dishes that are related to salads and cost less than $10. Also, include any dishes synonymous with salads and price around $10, including possible misspelled terms like 'salod'.",
        "target_collection": "RestaurantMenu",
        "search_query": "salads",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<=",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%salad%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show all vegetarian dishes that are related to salads and cost less than $10. Also, include any dishes synonymous with salads and price around $10, including possible misspelled terms like 'salod'.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:10, dishName:LIKE:'%salad%'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 6,
      "database_schema_index": 0,
      "natural_language_query": "Find vegetarian dishes similar to 'veggie delight' that are priced below $10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find vegetarian dishes similar to 'veggie delight' that are priced below $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "veggie delight",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find vegetarian dishes similar to 'veggie delight' that are priced below $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "veggie delight",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true, price:<:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 7,
      "database_schema_index": 0,
      "natural_language_query": "From the restaurant menu, find me all dishes similar to 'mushroom risotto', that are vegetarian and cost less than $20, and provide a count of results grouped by dish name for analysis.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "From the restaurant menu, find me all dishes similar to 'mushroom risotto', that are vegetarian and cost less than $20, and provide a count of results grouped by dish name for analysis.",
        "target_collection": "RestaurantMenu",
        "search_query": "mushroom risotto",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,price"
    },
    {
      "query_index": 8,
      "database_schema_index": 0,
      "natural_language_query": "Find all non-vegetarian dishes that are more expensive than $15 and include menu items similar to 'gourmet' dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all non-vegetarian dishes that are more expensive than $15 and include menu items similar to 'gourmet' dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": "gourmet",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all non-vegetarian dishes that are more expensive than $15 and include menu items similar to 'gourmet' dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": "gourmet",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "false, price:>:15"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 9,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes that cost less than $10 and are similar to a healthy salad.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that cost less than $10 and are similar to a healthy salad.",
        "target_collection": "RestaurantMenu",
        "search_query": "similar to a healthy salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that cost less than $10 and are similar to a healthy salad.",
        "target_collection": "RestaurantMenu",
        "search_query": "healthy salad",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 10,
      "database_schema_index": 0,
      "natural_language_query": "Show me vegetarian dishes on the menu that are similar to 'veggie burger' and group them by price to understand different pricing levels.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me vegetarian dishes on the menu that are similar to 'veggie burger' and group them by price to understand different pricing levels.",
        "target_collection": "RestaurantMenu",
        "search_query": "veggie burger",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "price"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me vegetarian dishes on the menu that are similar to 'veggie burger' and group them by price to understand different pricing levels.",
        "target_collection": "RestaurantMenu",
        "search_query": "veggie burger",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 11,
      "database_schema_index": 0,
      "natural_language_query": "Find all dishes similar to 'vegan pasta', priced below $15, and are labeled vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all dishes similar to 'vegan pasta', priced below $15, and are labeled vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegan pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '15,isVegetarian:=:true'"
    },
    {
      "query_index": 12,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes similar to 'spaghetti' that cost less than $15 and are vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes similar to 'spaghetti' that cost less than $15 and are vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": "spaghetti",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '15,isVegetarian:=:true'"
    },
    {
      "query_index": 13,
      "database_schema_index": 0,
      "natural_language_query": "Find the most frequently ordered vegetarian dish names that historically also had high semantic relevance to 'plant-based meals'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most frequently ordered vegetarian dish names that historically also had high semantic relevance to 'plant-based meals'.",
        "target_collection": "RestaurantMenu",
        "search_query": "plant-based meals",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the most frequently ordered vegetarian dish names that historically also had high semantic relevance to 'plant-based meals'.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 14,
      "database_schema_index": 0,
      "natural_language_query": "Find all dishes similar to 'roasted vegetable platter' that are vegetarian and have a price greater than $15, and group the results by Price to see the average cost of such dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all dishes similar to 'roasted vegetable platter' that are vegetarian and have a price greater than $15, and group the results by Price to see the average cost of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": "roasted vegetable platter",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "price"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all dishes similar to 'roasted vegetable platter' that are vegetarian and have a price greater than $15, and group the results by Price to see the average cost of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": "roasted vegetable platter",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:>:15"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 15,
      "database_schema_index": 0,
      "natural_language_query": "Show me all vegetarian dishes similar to a garden salad, offered at a price below $10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all vegetarian dishes similar to a garden salad, offered at a price below $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "similar to garden salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all vegetarian dishes similar to a garden salad, offered at a price below $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "garden salad",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 16,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes that are similar to lasagna.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that are similar to lasagna.",
        "target_collection": "RestaurantMenu",
        "search_query": "lasagna",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that are similar to lasagna.",
        "target_collection": "RestaurantMenu",
        "search_query": "lasagna",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 17,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes that are priced below $20 and are similar to a \"Mediterranean platter\".",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that are priced below $20 and are similar to a \"Mediterranean platter\".",
        "target_collection": "RestaurantMenu",
        "search_query": "Mediterranean platter",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that are priced below $20 and are similar to a \"Mediterranean platter\".",
        "target_collection": "RestaurantMenu",
        "search_query": "Mediterranean platter",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:20"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 18,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes similar to an apple pie that cost more than $5 and are vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes similar to an apple pie that cost more than $5 and are vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": "apple pie",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '5,isVegetarian:=:true'"
    },
    {
      "query_index": 19,
      "database_schema_index": 0,
      "natural_language_query": "Find all dishes related to 'spicy vegan pasta' and categorize them as vegetarian with prices above $10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all dishes related to 'spicy vegan pasta' and categorize them as vegetarian with prices above $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "spicy vegan pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all dishes related to 'spicy vegan pasta' and categorize them as vegetarian with prices above $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "spicy vegan pasta",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true, price:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 20,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes related to salad, grouped by price, and show the most relevant results based on similarity to 'mixed greens salad'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes related to salad, grouped by price, and show the most relevant results based on similarity to 'mixed greens salad'.",
        "target_collection": "RestaurantMenu",
        "search_query": "mixed greens salad",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "salad"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "price"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes related to salad, grouped by price, and show the most relevant results based on similarity to 'mixed greens salad'.",
        "target_collection": "RestaurantMenu",
        "search_query": "salad",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 21,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes that are similar to carbonara pasta for a budget-friendly menu, including any dishes that might have prices less than $20 and are vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes that are similar to carbonara pasta for a budget-friendly menu, including any dishes that might have prices less than $20 and are vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": "carbonara pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '20,isVegetarian:=:true'"
    },
    {
      "query_index": 22,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes from the RestaurantMenu that are priced less than $10 and are also similar to a classic garden salad.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the RestaurantMenu that are priced less than $10 and are also similar to a classic garden salad.",
        "target_collection": "RestaurantMenu",
        "search_query": "classic garden salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the RestaurantMenu that are priced less than $10 and are also similar to a classic garden salad.",
        "target_collection": "RestaurantMenu",
        "search_query": "garden salad",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 23,
      "database_schema_index": 0,
      "natural_language_query": "Find me vegetarian dishes similar to pasta that cost under $20.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me vegetarian dishes similar to pasta that cost under $20.",
        "target_collection": "RestaurantMenu",
        "search_query": "pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me vegetarian dishes similar to pasta that cost under $20.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 24,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes that are vegetarian, have prices less than $20, and are similar to a garden fresh salad.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes that are vegetarian, have prices less than $20, and are similar to a garden fresh salad.",
        "target_collection": "RestaurantMenu",
        "search_query": "garden fresh salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find dishes that are vegetarian, have prices less than $20, and are similar to a garden fresh salad.",
        "target_collection": "RestaurantMenu",
        "search_query": "garden fresh salad",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:20"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 25,
      "database_schema_index": 0,
      "natural_language_query": "Identify all vegetarian dishes priced under $20 and similar to 'healthy green salad'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify all vegetarian dishes priced under $20 and similar to 'healthy green salad'.",
        "target_collection": "RestaurantMenu",
        "search_query": "healthy green salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true, price"
    },
    {
      "query_index": 26,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes similar to \"spaghetti bolognese\" that are priced over $20 and group them by dish name to determine which type of dish appears most often.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes similar to \"spaghetti bolognese\" that are priced over $20 and group them by dish name to determine which type of dish appears most often.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegetarian dishes similar to spaghetti bolognese",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes similar to \"spaghetti bolognese\" that are priced over $20 and group them by dish name to determine which type of dish appears most often.",
        "target_collection": "RestaurantMenu",
        "search_query": "spaghetti bolognese",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true, price:>:20"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 27,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes with similar names to 'healthy salad' that are vegetarian and cost less than $10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes with similar names to 'healthy salad' that are vegetarian and cost less than $10.",
        "target_collection": "RestaurantMenu",
        "search_query": "healthy salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,price"
    },
    {
      "query_index": 28,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes similar to 'mediterranean couscous' whose price is less than $15.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes similar to 'mediterranean couscous' whose price is less than $15.",
        "target_collection": "RestaurantMenu",
        "search_query": "Find dishes similar to mediterranean couscous",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes similar to 'mediterranean couscous' whose price is less than $15.",
        "target_collection": "RestaurantMenu",
        "search_query": "mediterranean couscous",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:15"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 29,
      "database_schema_index": 0,
      "natural_language_query": "Find the most relevant dishes that are vegetarian, cost less than $20, and have similar descriptions to 'garden salad'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most relevant dishes that are vegetarian, cost less than $20, and have similar descriptions to 'garden salad'.",
        "target_collection": "RestaurantMenu",
        "search_query": "garden salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the most relevant dishes that are vegetarian, cost less than $20, and have similar descriptions to 'garden salad'.",
        "target_collection": "RestaurantMenu",
        "search_query": "garden salad",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:20"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 30,
      "database_schema_index": 0,
      "natural_language_query": "How many vegetarian dishes do we have on the menu that are similar to those sold at a French restaurant and cost more than $15?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "How many vegetarian dishes do we have on the menu that are similar to those sold at a French restaurant and cost more than $15?",
        "target_collection": "RestaurantMenu",
        "search_query": "Find dishes similar to those sold at a French restaurant",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "How many vegetarian dishes do we have on the menu that are similar to those sold at a French restaurant and cost more than $15?",
        "target_collection": "RestaurantMenu",
        "search_query": "French",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 31,
      "database_schema_index": 0,
      "natural_language_query": "What are some dishes priced below $15 that are popular with vegetarians and are conceptually similar to caprese salad?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "What are some dishes priced below $15 that are popular with vegetarians and are conceptually similar to caprese salad?",
        "target_collection": "RestaurantMenu",
        "search_query": "caprese salad",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:true"
    },
    {
      "query_index": 32,
      "database_schema_index": 0,
      "natural_language_query": "Show me all vegetarian dishes that have a price less than $20 and group them by dish name, while also calculating the average price of these dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all vegetarian dishes that have a price less than $20 and group them by dish name, while also calculating the average price of these dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all vegetarian dishes that have a price less than $20 and group them by dish name, while also calculating the average price of these dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 33,
      "database_schema_index": 0,
      "natural_language_query": "Find me all vegetarian dishes that are priced less than $15 and then calculate the average price of those dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all vegetarian dishes that are priced less than $15 and then calculate the average price of those dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all vegetarian dishes that are priced less than $15 and then calculate the average price of those dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:15"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 34,
      "database_schema_index": 0,
      "natural_language_query": "On the restaurant menu, list all dishes priced under $20, show the average price of these dishes, and indicate whether each dish is vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "On the restaurant menu, list all dishes priced under $20, show the average price of these dishes, and indicate whether each dish is vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "TYPE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "On the restaurant menu, list all dishes priced under $20, show the average price of these dishes, and indicate whether each dish is vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 35,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes on the menu that have a price of less than $10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes on the menu that have a price of less than $10.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:true"
    },
    {
      "query_index": 36,
      "database_schema_index": 0,
      "natural_language_query": "Find the names of all vegetarian dishes priced over $15, and group them by their names. Calculate the number of such dishes for each name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of all vegetarian dishes priced over $15, and group them by their names. Calculate the number of such dishes for each name.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "COUNT"
        },
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the names of all vegetarian dishes priced over $15, and group them by their names. Calculate the number of such dishes for each name.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:>:15"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 37,
      "database_schema_index": 0,
      "natural_language_query": "Find the average price of vegetarian dishes with prices greater than $20, from the menu that include 'pasta' in their name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average price of vegetarian dishes with prices greater than $20, from the menu that include 'pasta' in their name.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%pasta%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:=true"
    },
    {
      "query_index": 38,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes from the menu that are priced more than $10, and group the results by the dish name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu that are priced more than $10, and group the results by the dish name.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:true"
    },
    {
      "query_index": 39,
      "database_schema_index": 0,
      "natural_language_query": "Retrieve dish details with prices higher than $20 and check if any of these dishes are vegetarian-friendly while filtering those that have names containing 'Deluxe'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve dish details with prices higher than $20 and check if any of these dishes are vegetarian-friendly while filtering those that have names containing 'Deluxe'.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "Deluxe"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Retrieve dish details with prices higher than $20 and check if any of these dishes are vegetarian-friendly while filtering those that have names containing 'Deluxe'.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 40,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes from the menu that contain 'salad' in their name and compute the average price of these dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu that contain 'salad' in their name and compute the average price of these dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%salad%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu that contain 'salad' in their name and compute the average price of these dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 41,
      "database_schema_index": 0,
      "natural_language_query": "Find staff members with 'John' in their name who have at least 5 years of experience and are currently on duty.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find staff members with 'John' in their name who have at least 5 years of experience and are currently on duty.",
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "experienceYears",
          "operator": ">=",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "staffName",
          "operator": "LIKE",
          "value": "%John%"
        },
        "boolean_property_filter": {
          "property_name": "isOnDuty",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find staff members with 'John' in their name who have at least 5 years of experience and are currently on duty.",
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "staffName",
          "operator": "LIKE",
          "value": "'John%', experienceYears:>=:5, isOnDuty:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 42,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes that include the word 'pasta' in their name and are priced less than 20 dollars, grouped by dish name to find out the total number of such entries.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that include the word 'pasta' in their name and are priced less than 20 dollars, grouped by dish name to find out the total number of such entries.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%pasta%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes that include the word 'pasta' in their name and are priced less than 20 dollars, grouped by dish name to find out the total number of such entries.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 43,
      "database_schema_index": 0,
      "natural_language_query": "List all menu items with 'spaghetti' in the name and indicate if they are vegetarian, while showing the average price of all dishes with 'spaghetti' in brand names too.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all menu items with 'spaghetti' in the name and indicate if they are vegetarian, while showing the average price of all dishes with 'spaghetti' in brand names too.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%spaghetti%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "TYPE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all menu items with 'spaghetti' in the name and indicate if they are vegetarian, while showing the average price of all dishes with 'spaghetti' in brand names too.",
        "target_collection": "RestaurantMenu",
        "search_query": "spaghetti",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 44,
      "database_schema_index": 0,
      "natural_language_query": "Find all takeaway orders placed by customers named 'Smith', along with the average and total amount they spent. Additional filter: only include orders where the total amount is greater than $30.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all takeaway orders placed by customers named 'Smith', along with the average and total amount they spent. Additional filter: only include orders where the total amount is greater than $30.",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "totalAmount",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": {
          "property_name": "customerName",
          "operator": "=",
          "value": "Smith"
        },
        "boolean_property_filter": {
          "property_name": "isTakeaway",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "totalAmount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all takeaway orders placed by customers named 'Smith', along with the average and total amount they spent. Additional filter: only include orders where the total amount is greater than $30.",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "customerName",
          "operator": "=",
          "value": "'Smith', isTakeaway:=:true, totalAmount:>:30"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 45,
      "database_schema_index": 0,
      "natural_language_query": "Provide the number of vegetarian dishes that are listed with their names similar to 'Vegan Delight' and show how the total prices compare across vegetarian and non-vegetarian categories.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Provide the number of vegetarian dishes that are listed with their names similar to 'Vegan Delight' and show how the total prices compare across vegetarian and non-vegetarian categories.",
        "target_collection": "RestaurantMenu",
        "search_query": "Vegan Delight",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "Vegan Delight"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "isVegetarian"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Provide the number of vegetarian dishes that are listed with their names similar to 'Vegan Delight' and show how the total prices compare across vegetarian and non-vegetarian categories.",
        "target_collection": "RestaurantMenu",
        "search_query": "Vegan Delight",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 46,
      "database_schema_index": 0,
      "natural_language_query": "Find dishes in the restaurant menu that have 'taco' in their name, cost more than $10, and are vegetarian.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find dishes in the restaurant menu that have 'taco' in their name, cost more than $10, and are vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "taco"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find dishes in the restaurant menu that have 'taco' in their name, cost more than $10, and are vegetarian.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 47,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes on the menu that have dish names exactly matching 'Caesar Salad' and also provide the total count of such dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes on the menu that have dish names exactly matching 'Caesar Salad' and also provide the total count of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "=",
          "value": "Caesar Salad"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: dishName:='Caesar Salad'"
    },
    {
      "query_index": 48,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes in the restaurant menu that are priced above $10, and then aggregate the count of these dishes while inputting 'vegetarian' or 'vegetarian and expensive' into the search box to ensure relevance.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes in the restaurant menu that are priced above $10, and then aggregate the count of these dishes while inputting 'vegetarian' or 'vegetarian and expensive' into the search box to ensure relevance.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegetarian and expensive",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "vegetable"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "price"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,price"
    },
    {
      "query_index": 49,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes with a price less than $10, and return the number of such dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes with a price less than $10, and return the number of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes with a price less than $10, and return the number of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:<:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 50,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes whose names contain \"pasta\" from the menu, and get the average price of these dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes whose names contain \"pasta\" from the menu, and get the average price of these dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": "pasta",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%pasta%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes whose names contain \"pasta\" from the menu, and get the average price of these dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": "pasta",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 51,
      "database_schema_index": 0,
      "natural_language_query": "Show me all vegetarian dishes or those which contain the term 'Pasta', priced above $15, and group them based on their vegetarian status with a count of how many there are in each category.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all vegetarian dishes or those which contain the term 'Pasta', priced above $15, and group them based on their vegetarian status with a count of how many there are in each category.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 15
        },
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "Pasta"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "COUNT"
        },
        "groupby_property": "isVegetarian"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:=true"
    },
    {
      "query_index": 52,
      "database_schema_index": 0,
      "natural_language_query": "Identify all vegetarian dishes from the RestaurantMenu collection with prices above $15, and group these results by dish name, providing the total count for each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify all vegetarian dishes from the RestaurantMenu collection with prices above $15, and group these results by dish name, providing the total count for each group.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Identify all vegetarian dishes from the RestaurantMenu collection with prices above $15, and group these results by dish name, providing the total count for each group.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": "true,price:>:15"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 53,
      "database_schema_index": 0,
      "natural_language_query": "Find out how many dishes on the menu are vegetarian and group them by those under $10 and those that are $10 and above. Also, ensure that the dish names are similar to 'pasta'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find out how many dishes on the menu are vegetarian and group them by those under $10 and those that are $10 and above. Also, ensure that the dish names are similar to 'pasta'.",
        "target_collection": "RestaurantMenu",
        "search_query": "pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "COUNT"
        },
        "groupby_property": "price"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find out how many dishes on the menu are vegetarian and group them by those under $10 and those that are $10 and above. Also, ensure that the dish names are similar to 'pasta'.",
        "target_collection": "RestaurantMenu",
        "search_query": "pasta",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 54,
      "database_schema_index": 0,
      "natural_language_query": "Identify the restaurants with dishes having prices less than $20, include those that are vegetarian, and find dishes similar to 'vegan pasta' while grouping the results based on the dish name to see the dish name counts.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify the restaurants with dishes having prices less than $20, include those that are vegetarian, and find dishes similar to 'vegan pasta' while grouping the results based on the dish name to see the dish name counts.",
        "target_collection": "RestaurantMenu",
        "search_query": "vegan pasta",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Identify the restaurants with dishes having prices less than $20, include those that are vegetarian, and find dishes similar to 'vegan pasta' while grouping the results based on the dish name to see the dish name counts.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 20.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 55,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes from the menu that are similar to 'green curry', and for these dishes, calculate how many are vegetarian and how many are not. Then, filter those which cost less than $15.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu that are similar to 'green curry', and for these dishes, calculate how many are vegetarian and how many are not. Then, filter those which cost less than $15.",
        "target_collection": "RestaurantMenu",
        "search_query": "green curry",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu that are similar to 'green curry', and for these dishes, calculate how many are vegetarian and how many are not. Then, filter those which cost less than $15.",
        "target_collection": "RestaurantMenu",
        "search_query": "green curry",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 15.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 56,
      "database_schema_index": 0,
      "natural_language_query": "Find the average price of vegetarian dishes that contain the word 'salad' in their names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average price of vegetarian dishes that contain the word 'salad' in their names.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%salad%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average price of vegetarian dishes that contain the word 'salad' in their names.",
        "target_collection": "RestaurantMenu",
        "search_query": "salad",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 57,
      "database_schema_index": 0,
      "natural_language_query": "Show me the average price of vegetarian dishes with the name containing 'Pasta'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the average price of vegetarian dishes with the name containing 'Pasta'.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%Pasta%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVegetarian:true"
    },
    {
      "query_index": 58,
      "database_schema_index": 0,
      "natural_language_query": "List all the unique dish names along with their frequency of occurrence where the dish is vegetarian, and provide the count of such dishes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all the unique dish names along with their frequency of occurrence where the dish is vegetarian, and provide the count of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "dishName",
          "operator": "LIKE",
          "value": "%"
        },
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "COUNT"
        },
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all the unique dish names along with their frequency of occurrence where the dish is vegetarian, and provide the count of such dishes.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 59,
      "database_schema_index": 0,
      "natural_language_query": "Can you provide a report showing the top 5 most frequently ordered dishes, with details on how many of these dishes are vegetarian and their average prices?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Can you provide a report showing the top 5 most frequently ordered dishes, with details on how many of these dishes are vegetarian and their average prices?",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": {
          "property_name": "dishName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Can you provide a report showing the top 5 most frequently ordered dishes, with details on how many of these dishes are vegetarian and their average prices?",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.35,
      "error": null
    },
    {
      "query_index": 60,
      "database_schema_index": 0,
      "natural_language_query": "Find out what percentage of takeout orders have been placed by customers with names containing 'Smith' and determine the total and percentage of such takeout orders compared to dine-in orders.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find out what percentage of takeout orders have been placed by customers with names containing 'Smith' and determine the total and percentage of such takeout orders compared to dine-in orders.",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "customerName",
          "operator": "LIKE",
          "value": "%Smith%"
        },
        "boolean_property_filter": {
          "property_name": "isTakeaway",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isTakeaway",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find out what percentage of takeout orders have been placed by customers with names containing 'Smith' and determine the total and percentage of such takeout orders compared to dine-in orders.",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isTakeaway",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 61,
      "database_schema_index": 0,
      "natural_language_query": "Show me a breakdown of how many vegetarian versus non-vegetarian dishes are available and what percentage of the menu each represents.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me a breakdown of how many vegetarian versus non-vegetarian dishes are available and what percentage of the menu each represents.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVegetarian",
          "metrics": "COUNT"
        },
        "groupby_property": "dishName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me a breakdown of how many vegetarian versus non-vegetarian dishes are available and what percentage of the menu each represents.",
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 62,
      "database_schema_index": 0,
      "natural_language_query": "What are the average and highest total sales amounts for takeaway orders, grouped by each customer?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "What are the average and highest total sales amounts for takeaway orders, grouped by each customer?",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isTakeaway",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "totalAmount",
          "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "customerName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "What are the average and highest total sales amounts for takeaway orders, grouped by each customer?",
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isTakeaway",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 63,
      "database_schema_index": 0,
      "natural_language_query": "Find all vegetarian dishes priced above 20 units and search for dishes similar to 'Mushroom Delight'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all vegetarian dishes priced above 20 units and search for dishes similar to 'Mushroom Delight'.",
        "target_collection": "RestaurantMenu",
        "search_query": "similar to 'Mushroom Delight'",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVegetarian",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true, price"
    },
    {
      "query_index": 64,
      "database_schema_index": 1,
      "natural_language_query": "Show me all the critical patients who are above 60 years old, similar to those who have had complex surgeries, and list their details grouped by their room capacity.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all the critical patients who are above 60 years old, similar to those who have had complex surgeries, and list their details grouped by their room capacity.",
        "target_collection": "HospitalPatients",
        "search_query": "complex surgeries",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "capacity"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all the critical patients who are above 60 years old, similar to those who have had complex surgeries, and list their details grouped by their room capacity.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 65,
      "database_schema_index": 1,
      "natural_language_query": "Show me all critical patients over the age of 60 whose case details relate to 'urgent attention,' prioritizing those cases.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all critical patients over the age of 60 whose case details relate to 'urgent attention,' prioritizing those cases.",
        "target_collection": "HospitalPatients",
        "search_query": "urgent attention",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 66,
      "database_schema_index": 1,
      "natural_language_query": "Find patient records for critical patients over 60 years old with similar names to 'John'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find patient records for critical patients over 60 years old with similar names to 'John'.",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 67,
      "database_schema_index": 1,
      "natural_language_query": "Find the names of patients who are critical and are either aged within the age range of interest similar to older individuals for specific age-related treatments.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of patients who are critical and are either aged within the age range of interest similar to older individuals for specific age-related treatments.",
        "target_collection": "HospitalPatients",
        "search_query": "older individuals",
        "integer_property_filter": {
          "property_name": "age",
          "operator": "=",
          "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 68,
      "database_schema_index": 1,
      "natural_language_query": "Show me critically ill patients above the age of 70 who have names similar to 'Smith'",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me critically ill patients above the age of 70 who have names similar to 'Smith'",
        "target_collection": "HospitalPatients",
        "search_query": "Smith",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 70
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 69,
      "database_schema_index": 1,
      "natural_language_query": "Find the names of critical hospital patients aged over 70 whose names are related to 'John'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of critical hospital patients aged over 70 whose names are related to 'John'.",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 70
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 70,
      "database_schema_index": 1,
      "natural_language_query": "Find patients similar to 'John Doe' who are critical and above 50 years old, and group the results by age.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find patients similar to 'John Doe' who are critical and above 50 years old, and group the results by age.",
        "target_collection": "HospitalPatients",
        "search_query": "John Doe",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "age"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 71,
      "database_schema_index": 1,
      "natural_language_query": "Find all critically ill patients aged above 50 whose names relate to 'David' or similar names, and give me the top 5 matching results based on name similarity.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critically ill patients aged above 50 whose names relate to 'David' or similar names, and give me the top 5 matching results based on name similarity.",
        "target_collection": "HospitalPatients",
        "search_query": "David",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all critically ill patients aged above 50 whose names relate to 'David' or similar names, and give me the top 5 matching results based on name similarity.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 72,
      "database_schema_index": 1,
      "natural_language_query": "Find all critically ill patients older than 50 that might have names similar to popular persons named John Smith.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critically ill patients older than 50 that might have names similar to popular persons named John Smith.",
        "target_collection": "HospitalPatients",
        "search_query": "John Smith",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: age:>50"
    },
    {
      "query_index": 73,
      "database_schema_index": 1,
      "natural_language_query": "Find all critical patients over the age of 50 whose names are similar to 'John', grouping results...",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critical patients over the age of 50 whose names are similar to 'John', grouping results...",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "age"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all critical patients over the age of 50 whose names are similar to 'John', grouping results...",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 74,
      "database_schema_index": 1,
      "natural_language_query": "Find all critical patients in the hospital with ages similar to those of recently admitted emergency cases and include semantic variations of age-related descriptions.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critical patients in the hospital with ages similar to those of recently admitted emergency cases and include semantic variations of age-related descriptions.",
        "target_collection": "HospitalPatients",
        "search_query": "ages similar to recently admitted emergency cases",
        "integer_property_filter": {
          "property_name": "age",
          "operator": "=",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "critical"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all critical patients in the hospital with ages similar to those of recently admitted emergency cases and include semantic variations of age-related descriptions.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 75,
      "database_schema_index": 1,
      "natural_language_query": "Find patients who are similar to a high-risk cardiac patient, are over the age of 50, and are currently in a critical condition.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find patients who are similar to a high-risk cardiac patient, are over the age of 50, and are currently in a critical condition.",
        "target_collection": "HospitalPatients",
        "search_query": "high-risk cardiac patient",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find patients who are similar to a high-risk cardiac patient, are over the age of 50, and are currently in a critical condition.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 76,
      "database_schema_index": 1,
      "natural_language_query": "Find patients over 65 years old who are in critical condition, focusing on those similar to John Doe.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find patients over 65 years old who are in critical condition, focusing on those similar to John Doe.",
        "target_collection": "HospitalPatients",
        "search_query": "John Doe",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find patients over 65 years old who are in critical condition, focusing on those similar to John Doe.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 77,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients who are similar to 'John Doe', over 60 years old, and in critical condition. Group the results by Age and analyze the distribution of critical patients.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients who are similar to 'John Doe', over 60 years old, and in critical condition. Group the results by Age and analyze the distribution of critical patients.",
        "target_collection": "HospitalPatients",
        "search_query": "patients similar to 'John Doe'",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "age"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all patients who are similar to 'John Doe', over 60 years old, and in critical condition. Group the results by Age and analyze the distribution of critical patients.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 78,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients who are in a situation similar to a patient named 'John Doe', are above the age of 60, and are marked as critical.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients who are in a situation similar to a patient named 'John Doe', are above the age of 60, and are marked as critical.",
        "target_collection": "HospitalPatients",
        "search_query": "John Doe",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all patients who are in a situation similar to a patient named 'John Doe', are above the age of 60, and are marked as critical.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 79,
      "database_schema_index": 1,
      "natural_language_query": "Find patients around the age of 60 in critical condition whose names are similar to 'John Smith' to assist in prioritizing treatment based on similarity to known high-risk situations.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find patients around the age of 60 in critical condition whose names are similar to 'John Smith' to assist in prioritizing treatment based on similarity to known high-risk situations.",
        "target_collection": "HospitalPatients",
        "search_query": "John Smith",
        "integer_property_filter": {
          "property_name": "age",
          "operator": "=",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find patients around the age of 60 in critical condition whose names are similar to 'John Smith' to assist in prioritizing treatment based on similarity to known high-risk situations.",
        "target_collection": "HospitalPatients",
        "search_query": "John Smith",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 80,
      "database_schema_index": 1,
      "natural_language_query": "Find all rooms that are occupied and list patients over the age of 50 who are in critical condition, while looking for related cases to 'severe health issues'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all rooms that are occupied and list patients over the age of 50 who are in critical condition, while looking for related cases to 'severe health issues'.",
        "target_collection": "HospitalRooms",
        "search_query": "severe health issues",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all rooms that are occupied and list patients over the age of 50 who are in critical condition, while looking for related cases to 'severe health issues'.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.775,
      "error": null
    },
    {
      "query_index": 81,
      "database_schema_index": 1,
      "natural_language_query": "Find rooms in the hospital that are currently occupied but not at full capacity, and provide the details of patients related to these rooms who are in critical condition, while also showing other related critical conditions based on semantic meaning.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find rooms in the hospital that are currently occupied but not at full capacity, and provide the details of patients related to these rooms who are in critical condition, while also showing other related critical conditions based on semantic meaning.",
        "target_collection": "HospitalRooms",
        "search_query": "similar rooms partially used",
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": "<=",
          "value": 4
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find rooms in the hospital that are currently occupied but not at full capacity, and provide the details of patients related to these rooms who are in critical condition, while also showing other related critical conditions based on semantic meaning.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": "true,capacity:>:0"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 82,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients similar to those named 'John Doe' who are older than 40 and in critical condition, and show the count of distinct room IDs by occupancy status.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients similar to those named 'John Doe' who are older than 40 and in critical condition, and show the count of distinct room IDs by occupancy status.",
        "target_collection": "HospitalPatients",
        "search_query": "similar to John Doe",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 40
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "=",
          "value": "John Doe"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isOccupied"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all patients similar to those named 'John Doe' who are older than 40 and in critical condition, and show the count of distinct room IDs by occupancy status.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 83,
      "database_schema_index": 1,
      "natural_language_query": "Show me a list of all critical patients named 'John', who are older than 70, and find any similar patients in a critical condition that match the description of being older and named 'Jonathan'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me a list of all critical patients named 'John', who are older than 70, and find any similar patients in a critical condition that match the description of being older and named 'Jonathan'.",
        "target_collection": "HospitalPatients",
        "search_query": "older and named 'Jonathan'",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 70
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "=",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 84,
      "database_schema_index": 1,
      "natural_language_query": "Find critical patients aged above 70 whose names are similar to those starting with 'Smith'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find critical patients aged above 70 whose names are similar to those starting with 'Smith'.",
        "target_collection": "HospitalPatients",
        "search_query": "Smith",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 70
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find critical patients aged above 70 whose names are similar to those starting with 'Smith'.",
        "target_collection": "HospitalPatients",
        "search_query": "Smith",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 85,
      "database_schema_index": 1,
      "natural_language_query": "Get all patients in critical condition from the HospitalPatients collection, older than 50, and whose names include terms similar to 'John' or 'Jonathan'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Get all patients in critical condition from the HospitalPatients collection, older than 50, and whose names include terms similar to 'John' or 'Jonathan'.",
        "target_collection": "HospitalPatients",
        "search_query": "similar to 'John' or 'Jonathan'",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Get all patients in critical condition from the HospitalPatients collection, older than 50, and whose names include terms similar to 'John' or 'Jonathan'.",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 86,
      "database_schema_index": 1,
      "natural_language_query": "Find all critical hospital patients who are over 65 years old and have a similar condition to 'heart failure'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critical hospital patients who are over 65 years old and have a similar condition to 'heart failure'.",
        "target_collection": "HospitalPatients",
        "search_query": "heart failure",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all critical hospital patients who are over 65 years old and have a similar condition to 'heart failure'.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 87,
      "database_schema_index": 1,
      "natural_language_query": "Find all hospital patients over the age of 60 who are in critical condition, and who have names similar to \"John\".",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all hospital patients over the age of 60 who are in critical condition, and who have names similar to \"John\".",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all hospital patients over the age of 60 who are in critical condition, and who have names similar to \"John\".",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 88,
      "database_schema_index": 1,
      "natural_language_query": "Find all the critical patients of ages similar to 70 and group them by their FirstName for further analysis.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all the critical patients of ages similar to 70 and group them by their FirstName for further analysis.",
        "target_collection": "HospitalPatients",
        "search_query": "70",
        "integer_property_filter": {
          "property_name": "age",
          "operator": "=",
          "value": 70
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": ""
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "patientName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all the critical patients of ages similar to 70 and group them by their FirstName for further analysis.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 89,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients above 60 years old admitted into the hospital who are marked as critical, and retrieve results related to patients named similarly to 'John Smith'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients above 60 years old admitted into the hospital who are marked as critical, and retrieve results related to patients named similarly to 'John Smith'.",
        "target_collection": "HospitalPatients",
        "search_query": "John Smith",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all patients above 60 years old admitted into the hospital who are marked as critical, and retrieve results related to patients named similarly to 'John Smith'.",
        "target_collection": "HospitalPatients",
        "search_query": "John Smith",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 90,
      "database_schema_index": 1,
      "natural_language_query": "List all critical patients above the age of 50 who have names similar to \"John Doe\" within the hospital and count how often each name appears among the critical patients in each age group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all critical patients above the age of 50 who have names similar to \"John Doe\" within the hospital and count how often each name appears among the critical patients in each age group.",
        "target_collection": "HospitalPatients",
        "search_query": "John Doe",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "COUNT"
        },
        "text_property_aggregation": {
          "property_name": "patientName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "age"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 91,
      "database_schema_index": 1,
      "natural_language_query": "Who are the critical patients over the age of 60 whose names are similar to 'Jones'?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Who are the critical patients over the age of 60 whose names are similar to 'Jones'?",
        "target_collection": "HospitalPatients",
        "search_query": "Jones",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Who are the critical patients over the age of 60 whose names are similar to 'Jones'?",
        "target_collection": "HospitalPatients",
        "search_query": "Jones",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 92,
      "database_schema_index": 1,
      "natural_language_query": "Find all hospital rooms that have a similar layout to \"Deluxe Suite\" and can accommodate between 2 and 4 patients. Additionally, the room should not currently be occupied.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all hospital rooms that have a similar layout to \"Deluxe Suite\" and can accommodate between 2 and 4 patients. Additionally, the room should not currently be occupied.",
        "target_collection": "HospitalRooms",
        "search_query": "Deluxe Suite",
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">=",
          "value": 2
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2,capacity:<=:4,isOccupied:=:false'"
    },
    {
      "query_index": 93,
      "database_schema_index": 1,
      "natural_language_query": "Find all hospital rooms that are occupied and have a capacity of more than 5, focusing on rooms that may be similar to any critical condition facilities.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all hospital rooms that are occupied and have a capacity of more than 5, focusing on rooms that may be similar to any critical condition facilities.",
        "target_collection": "HospitalRooms",
        "search_query": "critical condition facilities",
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isOccupied:=true"
    },
    {
      "query_index": 94,
      "database_schema_index": 1,
      "natural_language_query": "In the HospitalPatients collection, find all patients related to cases similar to 'cardiac arrhythmia' who are above the age of 50 and currently in critical condition. Also, provide a summary of the number of critical cases grouped by age range.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "In the HospitalPatients collection, find all patients related to cases similar to 'cardiac arrhythmia' who are above the age of 50 and currently in critical condition. Also, provide a summary of the number of critical cases grouped by age range.",
        "target_collection": "HospitalPatients",
        "search_query": "cardiac arrhythmia",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "age"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: age:>"
    },
    {
      "query_index": 95,
      "database_schema_index": 1,
      "natural_language_query": "Find all critical patients who are over the age of 60 and have names similar to 'Johnson'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critical patients who are over the age of 60 and have names similar to 'Johnson'.",
        "target_collection": "HospitalPatients",
        "search_query": "Johnson",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 96,
      "database_schema_index": 1,
      "natural_language_query": "Show me all the hospital rooms with a capacity greater than 5, including a list of available rooms that are currently not occupied.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all the hospital rooms with a capacity greater than 5, including a list of available rooms that are currently not occupied.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all the hospital rooms with a capacity greater than 5, including a list of available rooms that are currently not occupied.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">",
          "value": 5.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 97,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients who are above 60 years of age, in critical condition, and whose names are similar to \"John Doe\".",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients who are above 60 years of age, in critical condition, and whose names are similar to \"John Doe\".",
        "target_collection": "HospitalPatients",
        "search_query": "John Doe",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "John Doe"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all patients who are above 60 years of age, in critical condition, and whose names are similar to \"John Doe\".",
        "target_collection": "HospitalPatients",
        "search_query": "John Doe",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 98,
      "database_schema_index": 1,
      "natural_language_query": "Find all critical patients who are over 60 years old and search for those with names similar to 'John', then group the results by age to see age-wise critical patient distribution.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critical patients who are over 60 years old and search for those with names similar to 'John', then group the results by age to see age-wise critical patient distribution.",
        "target_collection": "HospitalPatients",
        "search_query": "similar to John",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "age"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:true"
    },
    {
      "query_index": 99,
      "database_schema_index": 1,
      "natural_language_query": "Find patients who are not in critical condition, are older than 60, and look for patients with similar medical records to sample patients.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find patients who are not in critical condition, are older than 60, and look for patients with similar medical records to sample patients.",
        "target_collection": "HospitalPatients",
        "search_query": "similar to sample patients",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: age:>60"
    },
    {
      "query_index": 100,
      "database_schema_index": 1,
      "natural_language_query": "Find the average age of all critically ill patients whose names are similar to 'John' or who are aged above 60 and ensure to group by their critical condition status.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average age of all critically ill patients whose names are similar to 'John' or who are aged above 60 and ensure to group by their critical condition status.",
        "target_collection": "HospitalPatients",
        "search_query": "name similar to John",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isCritical"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average age of all critically ill patients whose names are similar to 'John' or who are aged above 60 and ensure to group by their critical condition status.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 101,
      "database_schema_index": 1,
      "natural_language_query": "Find all critical patients older than 60 years from the HospitalPatients collection, grouped by their critical status, and provide the total number and percentage of critical versus non-critical patients.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all critical patients older than 60 years from the HospitalPatients collection, grouped by their critical status, and provide the total number and percentage of critical versus non-critical patients.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isCritical",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "isCritical"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all critical patients older than 60 years from the HospitalPatients collection, grouped by their critical status, and provide the total number and percentage of critical versus non-critical patients.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 102,
      "database_schema_index": 1,
      "natural_language_query": "Find all hospital rooms with a capacity of at least 5 that are currently not occupied, and group the results by RoomID.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all hospital rooms with a capacity of at least 5 that are currently not occupied, and group the results by RoomID.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">=",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "roomID"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all hospital rooms with a capacity of at least 5 that are currently not occupied, and group the results by RoomID.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 103,
      "database_schema_index": 1,
      "natural_language_query": "Retrieve the list of patients who are over the age of 60, currently in critical condition, and whose names are similar to 'John'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve the list of patients who are over the age of 60, currently in critical condition, and whose names are similar to 'John'.",
        "target_collection": "HospitalPatients",
        "search_query": "names similar to 'John'",
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Retrieve the list of patients who are over the age of 60, currently in critical condition, and whose names are similar to 'John'.",
        "target_collection": "HospitalPatients",
        "search_query": "John",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 104,
      "database_schema_index": 1,
      "natural_language_query": "Find the names of medical staff who work exactly 8-hour shifts, are available for duty, and calculate the total number of such staff members currently assigned.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of medical staff who work exactly 8-hour shifts, are available for duty, and calculate the total number of such staff members currently assigned.",
        "target_collection": "StaffAssignments",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "shiftHours",
          "operator": "=",
          "value": 8
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "shiftHours",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the names of medical staff who work exactly 8-hour shifts, are available for duty, and calculate the total number of such staff members currently assigned.",
        "target_collection": "StaffAssignments",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 105,
      "database_schema_index": 1,
      "natural_language_query": "Find instances where patient name includes 'John', patient is critical, and calculate the average age of such patients.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find instances where patient name includes 'John', patient is critical, and calculate the average age of such patients.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find instances where patient name includes 'John', patient is critical, and calculate the average age of such patients.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 106,
      "database_schema_index": 1,
      "natural_language_query": "Provide a summary of all hospital rooms with a capacity greater than 2 that are currently occupied, and group the results by the room identifier, RoomID.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Provide a summary of all hospital rooms with a capacity greater than 2 that are currently occupied, and group the results by the room identifier, RoomID.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">",
          "value": 2
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "roomID"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Provide a summary of all hospital rooms with a capacity greater than 2 that are currently occupied, and group the results by the room identifier, RoomID.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 107,
      "database_schema_index": 1,
      "natural_language_query": "Find me all rooms that are currently occupied, have a capacity greater than 5, with RoomID like 'A%', and count the total number of such rooms.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all rooms that are currently occupied, have a capacity greater than 5, with RoomID like 'A%', and count the total number of such rooms.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "roomID",
          "operator": "LIKE",
          "value": "A%"
        },
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "roomID",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isOccupied:=true"
    },
    {
      "query_index": 108,
      "database_schema_index": 1,
      "natural_language_query": "Show me the rooms that have a specific RoomID containing the text 'CU' and are currently not occupied, and also provide the average capacity of these rooms.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the rooms that have a specific RoomID containing the text 'CU' and are currently not occupied, and also provide the average capacity of these rooms.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "roomID",
          "operator": "LIKE",
          "value": "CU"
        },
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "capacity",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the rooms that have a specific RoomID containing the text 'CU' and are currently not occupied, and also provide the average capacity of these rooms.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "roomID",
          "operator": "LIKE",
          "value": "'%CU%' , isOccupied:=:false"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.875,
      "error": null
    },
    {
      "query_index": 109,
      "database_schema_index": 1,
      "natural_language_query": "Show me all the hospital rooms with a RoomID that contains 'a', which can accommodate at least 2 patients and are currently not occupied. Also, aggregate the total number of available rooms.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all the hospital rooms with a RoomID that contains 'a', which can accommodate at least 2 patients and are currently not occupied. Also, aggregate the total number of available rooms.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">=",
          "value": 2
        },
        "text_property_filter": {
          "property_name": "roomID",
          "operator": "LIKE",
          "value": "%a%"
        },
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isOccupied",
          "metrics": "TOTAL_FALSE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all the hospital rooms with a RoomID that contains 'a', which can accommodate at least 2 patients and are currently not occupied. Also, aggregate the total number of available rooms.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 110,
      "database_schema_index": 1,
      "natural_language_query": "Find all hospital rooms where RoomID contains 'A', the capacity is less than 4, and are currently unoccupied. Group them by their capacity.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all hospital rooms where RoomID contains 'A', the capacity is less than 4, and are currently unoccupied. Group them by their capacity.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": "<",
          "value": 4
        },
        "text_property_filter": {
          "property_name": "roomID",
          "operator": "LIKE",
          "value": "A"
        },
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "capacity"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all hospital rooms where RoomID contains 'A', the capacity is less than 4, and are currently unoccupied. Group them by their capacity.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 111,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients whose name includes 'John', are above 60 years old, and are in critical condition. Also, summarize their ages to provide mean and maximum values.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients whose name includes 'John', are above 60 years old, and are in critical condition. Also, summarize their ages to provide mean and maximum values.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all patients whose name includes 'John', are above 60 years old, and are in critical condition. Also, summarize their ages to provide mean and maximum values.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 112,
      "database_schema_index": 1,
      "natural_language_query": "Find the oldest critical patients, grouped by their room, and only include those rooms that are currently occupied.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the oldest critical patients, grouped by their room, and only include those rooms that are currently occupied.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 18
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "roomID"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the oldest critical patients, grouped by their room, and only include those rooms that are currently occupied.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 113,
      "database_schema_index": 1,
      "natural_language_query": "Find all staff members who are not available and have shift hours greater than 8 and include relevant results similar to 'Dr. Smith' only",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all staff members who are not available and have shift hours greater than 8 and include relevant results similar to 'Dr. Smith' only",
        "target_collection": "StaffAssignments",
        "search_query": "Dr. Smith",
        "integer_property_filter": {
          "property_name": "shiftHours",
          "operator": ">",
          "value": 8
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isAvailable:=false"
    },
    {
      "query_index": 114,
      "database_schema_index": 1,
      "natural_language_query": "Find all patients who are critical, above 65 years old, and group by their names to see who has the most critical cases.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all patients who are critical, above 65 years old, and group by their names to see who has the most critical cases.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "patientName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:=true"
    },
    {
      "query_index": 115,
      "database_schema_index": 1,
      "natural_language_query": "List the total number of medical staff members who are not available and calculate the sum of their shift hours, ignoring the individual names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List the total number of medical staff members who are not available and calculate the sum of their shift hours, ignoring the individual names.",
        "target_collection": "StaffAssignments",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "shiftHours",
          "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "TOTAL_FALSE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List the total number of medical staff members who are not available and calculate the sum of their shift hours, ignoring the individual names.",
        "target_collection": "StaffAssignments",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 116,
      "database_schema_index": 1,
      "natural_language_query": "Show me the names of medical staff who are currently available, and for each available staff, determine how many total hours they are scheduled to work, sorted by their shift hours.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the names of medical staff who are currently available, and for each available staff, determine how many total hours they are scheduled to work, sorted by their shift hours.",
        "target_collection": "StaffAssignments",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "shiftHours",
          "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "staffName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isAvailable:=true"
    },
    {
      "query_index": 117,
      "database_schema_index": 1,
      "natural_language_query": "Identify the number and percentage of critical patients among those who are older than 50 years in the hospital.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify the number and percentage of critical patients among those who are older than 50 years in the hospital.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isCritical",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Identify the number and percentage of critical patients among those who are older than 50 years in the hospital.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 50.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 118,
      "database_schema_index": 1,
      "natural_language_query": "Find me a room in the hospital that can accommodate at least 3 patients and is not currently occupied, among rooms similar to Room A1.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me a room in the hospital that can accommodate at least 3 patients and is not currently occupied, among rooms similar to Room A1.",
        "target_collection": "HospitalRooms",
        "search_query": "Room A1",
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">=",
          "value": 3
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: >2, isOccupied"
    },
    {
      "query_index": 119,
      "database_schema_index": 1,
      "natural_language_query": "Identify the rooms in the hospital that are currently occupied and calculate the percentage of rooms that are occupied.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify the rooms in the hospital that are currently occupied and calculate the percentage of rooms that are occupied.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isOccupied",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Identify the rooms in the hospital that are currently occupied and calculate the percentage of rooms that are occupied.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 120,
      "database_schema_index": 1,
      "natural_language_query": "Calculate the average age of critical patients who are named 'John' or 'Jane' in the hospital database.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Calculate the average age of critical patients who are named 'John' or 'Jane' in the hospital database.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">=",
          "value": 0
        },
        "text_property_filter": {
          "property_name": "patientName",
          "operator": "LIKE",
          "value": "%John% OR %Jane%"
        },
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Calculate the average age of critical patients who are named 'John' or 'Jane' in the hospital database.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 121,
      "database_schema_index": 1,
      "natural_language_query": "Show me the average age of patients who are not in critical condition, and also give me details of patients older than 60 years.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the average age of patients who are not in critical condition, and also give me details of patients older than 60 years.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the average age of patients who are not in critical condition, and also give me details of patients older than 60 years.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 122,
      "database_schema_index": 1,
      "natural_language_query": "Find the top 5 most common staff names of those who are available and have shifts longer than 10 hours.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the top 5 most common staff names of those who are available and have shifts longer than 10 hours.",
        "target_collection": "StaffAssignments",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "shiftHours",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "staffName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isAvailable:=true"
    },
    {
      "query_index": 123,
      "database_schema_index": 1,
      "natural_language_query": "In the HospitalPatients collection, identify the most common names of critical patients aged over 60 and calculate the total number of patients for each of those names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "In the HospitalPatients collection, identify the most common names of critical patients aged over 60 and calculate the total number of patients for each of those names.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "patientName",
          "metrics": "COUNT"
        },
        "text_property_aggregation": {
          "property_name": "patientName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "patientName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCritical:true"
    },
    {
      "query_index": 124,
      "database_schema_index": 1,
      "natural_language_query": "Find all occupied hospital rooms and determine what percentage of them are in use, then list them along with their room IDs.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all occupied hospital rooms and determine what percentage of them are in use, then list them along with their room IDs.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isOccupied",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "roomID"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all occupied hospital rooms and determine what percentage of them are in use, then list them along with their room IDs.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 125,
      "database_schema_index": 1,
      "natural_language_query": "Determine the percentage of rooms that are currently occupied versus those that are free in the hospital, including counts for each category.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Determine the percentage of rooms that are currently occupied versus those that are free in the hospital, including counts for each category.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isOccupied",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Determine the percentage of rooms that are currently occupied versus those that are free in the hospital, including counts for each category.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 126,
      "database_schema_index": 1,
      "natural_language_query": "Find the average age of critical patients in each hospital room that is currently occupied.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average age of critical patients in each hospital room that is currently occupied.",
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "age",
          "operator": ">",
          "value": 0
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCritical",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "age",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "roomID"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average age of critical patients in each hospital room that is currently occupied.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.475,
      "error": null
    },
    {
      "query_index": 127,
      "database_schema_index": 1,
      "natural_language_query": "List all hospitals rooms similar to 'infectious ward' that can accommodate more than 2 patients, are not occupied, and calculate the average maximum capacity for these rooms.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all hospitals rooms similar to 'infectious ward' that can accommodate more than 2 patients, are not occupied, and calculate the average maximum capacity for these rooms.",
        "target_collection": "HospitalRooms",
        "search_query": "infectious ward",
        "integer_property_filter": {
          "property_name": "capacity",
          "operator": ">",
          "value": 2
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isOccupied",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "capacity",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all hospitals rooms similar to 'infectious ward' that can accommodate more than 2 patients, are not occupied, and calculate the average maximum capacity for these rooms.",
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 128,
      "database_schema_index": 2,
      "natural_language_query": "Show me the active artists with more than 3 albums, and provide similar artists to the one named 'Beethoven Symphony Collection'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the active artists with more than 3 albums, and provide similar artists to the one named 'Beethoven Symphony Collection'.",
        "target_collection": "ArtistProfiles",
        "search_query": "Beethoven Symphony Collection",
        "integer_property_filter": {
          "property_name": "totalAlbums",
          "operator": ">",
          "value": 3
        },
        "text_property_filter": {
          "property_name": "artistName",
          "operator": "LIKE",
          "value": "Beethoven Symphony Collection"
        },
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the active artists with more than 3 albums, and provide similar artists to the one named 'Beethoven Symphony Collection'.",
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": "true, totalAlbums:>:3"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 129,
      "database_schema_index": 2,
      "natural_language_query": "For music albums that have exactly 10 tracks and are officially released, find the ones whose title is similar to 'Greatest Hits'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "For music albums that have exactly 10 tracks and are officially released, find the ones whose title is similar to 'Greatest Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": "=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "For music albums that have exactly 10 tracks and are officially released, find the ones whose title is similar to 'Greatest Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "trackCount",
          "operator": "=",
          "value": "10, isReleased:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 130,
      "database_schema_index": 2,
      "natural_language_query": "Find and categorize albums that are similar to \"Relaxing Music\" and have more than 10 tracks, and show only those that are not yet released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find and categorize albums that are similar to \"Relaxing Music\" and have more than 10 tracks, and show only those that are not yet released.",
        "target_collection": "MusicAlbums",
        "search_query": "Relaxing Music",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "albumTitle"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:false'"
    },
    {
      "query_index": 131,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that have a title similar to \"Greatest Hits\", contain at least 10 tracks, and have been officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that have a title similar to \"Greatest Hits\", contain at least 10 tracks, and have been officially released.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums that have a title similar to \"Greatest Hits\", contain at least 10 tracks, and have been officially released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 132,
      "database_schema_index": 2,
      "natural_language_query": "Find albums similar to \"Greatest Hits Collection\" that have more than 10 tracks and are officially released, and group the results by the number of tracks.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find albums similar to \"Greatest Hits Collection\" that have more than 10 tracks and are officially released, and group the results by the number of tracks.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to 'Greatest Hits Collection'",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "trackCount"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find albums similar to \"Greatest Hits Collection\" that have more than 10 tracks and are officially released, and group the results by the number of tracks.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "'Greatest Hits Collection'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 133,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums similar to 'Greatest Hits', ensure they are officially released and have more than 10 tracks in their listing.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums similar to 'Greatest Hits', ensure they are officially released and have more than 10 tracks in their listing.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to 'Greatest Hits'",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: albumTitle LIKE 'Greatest Hits'"
    },
    {
      "query_index": 134,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums similar to 'Summer Vibes' that have more than 10 tracks and have been released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums similar to 'Summer Vibes' that have more than 10 tracks and have been released.",
        "target_collection": "MusicAlbums",
        "search_query": "Summer Vibes",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 135,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that are not released yet, have more than 10 tracks, and are similar to 'Greatest Hits'. Group the results by the album title and return the count of each.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that are not released yet, have more than 10 tracks, and are similar to 'Greatest Hits'. Group the results by the album title and return the count of each.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "albumTitle"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums that are not released yet, have more than 10 tracks, and are similar to 'Greatest Hits'. Group the results by the album title and return the count of each.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false, trackCount:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 136,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums similar to 'Dark Side of the Moon' that have at least 10 tracks and have already been released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums similar to 'Dark Side of the Moon' that have at least 10 tracks and have already been released.",
        "target_collection": "MusicAlbums",
        "search_query": "Dark Side of the Moon",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 137,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums that are not released but are similar to popular rock albums with a track count greater than 10.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums that are not released but are similar to popular rock albums with a track count greater than 10.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to popular rock albums",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find music albums that are not released but are similar to popular rock albums with a track count greater than 10.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false,trackCount:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 138,
      "database_schema_index": 2,
      "natural_language_query": "Find me music albums that are similar to Adele's released albums, but only those with more than 10 tracks.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me music albums that are similar to Adele's released albums, but only those with more than 10 tracks.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to Adele's albums",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me music albums that are similar to Adele's released albums, but only those with more than 10 tracks.",
        "target_collection": "MusicAlbums",
        "search_query": "Adele",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 139,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that are yet to be released but similar to 'The Dark Side of the Moon', which have more than 10 tracks and analyze the album titles for the most common themes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that are yet to be released but similar to 'The Dark Side of the Moon', which have more than 10 tracks and analyze the album titles for the most common themes.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to 'The Dark Side of the Moon'",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "*"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "albumTitle",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums that are yet to be released but similar to 'The Dark Side of the Moon', which have more than 10 tracks and analyze the album titles for the most common themes.",
        "target_collection": "MusicAlbums",
        "search_query": "The Dark Side of the Moon",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false,trackCount:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 140,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that have been officially released, where the album is similar to 'Greatest Hits', and contain more than 10 tracks.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that have been officially released, where the album is similar to 'Greatest Hits', and contain more than 10 tracks.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums that have been officially released, where the album is similar to 'Greatest Hits', and contain more than 10 tracks.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "true,trackCount:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 141,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums similar to 'Dark Side of the Moon', with more than 5 tracks, that are released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums similar to 'Dark Side of the Moon', with more than 5 tracks, that are released.",
        "target_collection": "MusicAlbums",
        "search_query": "Dark Side of the Moon",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '5,isReleased:=:true'"
    },
    {
      "query_index": 142,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums with a semantic similarity to 'classic rock' that have more than 10 tracks and have not been officially released yet.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums with a semantic similarity to 'classic rock' that have more than 10 tracks and have not been officially released yet.",
        "target_collection": "MusicAlbums",
        "search_query": "classic rock",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:false'"
    },
    {
      "query_index": 143,
      "database_schema_index": 2,
      "natural_language_query": "Find all albums with more than 10 tracks, that are similar to 'Greatest Hits', and are yet to be released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all albums with more than 10 tracks, that are similar to 'Greatest Hits', and are yet to be released.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to 'Greatest Hits'",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:false'"
    },
    {
      "query_index": 144,
      "database_schema_index": 2,
      "natural_language_query": "Find albums similar to 'Greatest Hits' that have more than 10 tracks and have not yet been released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find albums similar to 'Greatest Hits' that have more than 10 tracks and have not yet been released.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10, isReleased:=false'"
    },
    {
      "query_index": 145,
      "database_schema_index": 2,
      "natural_language_query": "Find Music Albums with at least 10 tracks that are officially released and similar to 'A Night at the Opera'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find Music Albums with at least 10 tracks that are officially released and similar to 'A Night at the Opera'.",
        "target_collection": "MusicAlbums",
        "search_query": "A Night at the Opera",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 146,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that are similar to 'Greatest Hits', have more than 10 tracks, and are not yet released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that are similar to 'Greatest Hits', have more than 10 tracks, and are not yet released.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums that are similar to 'Greatest Hits', have more than 10 tracks, and are not yet released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "'Greatest Hits',trackCount:>:10,isReleased:=:false"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 147,
      "database_schema_index": 2,
      "natural_language_query": "Show me the top-selling music albums that have not been released, with more than five tracks, and find those relevant to the phrase 'greatest hits'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the top-selling music albums that have not been released, with more than five tracks, and find those relevant to the phrase 'greatest hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "greatest hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "albumTitle",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the top-selling music albums that have not been released, with more than five tracks, and find those relevant to the phrase 'greatest hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "greatest hits",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false,trackCount:>:5"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 148,
      "database_schema_index": 2,
      "natural_language_query": "Find me the albums that are similar to \"The Best of Rock n' Roll\", have more than 10 tracks, and are not released yet.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me the albums that are similar to \"The Best of Rock n' Roll\", have more than 10 tracks, and are not released yet.",
        "target_collection": "MusicAlbums",
        "search_query": "The Best of Rock n' Roll",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:false'"
    },
    {
      "query_index": 149,
      "database_schema_index": 2,
      "natural_language_query": "Find the number of tracks in albums that are similar to the \"Greatest Hits\" compilation, are officially released, and calculate the average track count of these released albums.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the number of tracks in albums that are similar to the \"Greatest Hits\" compilation, are officially released, and calculate the average track count of these released albums.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to \"Greatest Hits\" compilation",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": "=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the number of tracks in albums that are similar to the \"Greatest Hits\" compilation, are officially released, and calculate the average track count of these released albums.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 150,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums with more than 10 tracks that are similar to the concept of 'greatest hits', and only show those that have been released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks that are similar to the concept of 'greatest hits', and only show those that have been released.",
        "target_collection": "MusicAlbums",
        "search_query": "greatest hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks that are similar to the concept of 'greatest hits', and only show those that have been released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 151,
      "database_schema_index": 2,
      "natural_language_query": "Show all music albums with names similar to 'Electric Vibes' that have more than 10 tracks and are officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all music albums with names similar to 'Electric Vibes' that have more than 10 tracks and are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": "Electric Vibes",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 152,
      "database_schema_index": 2,
      "natural_language_query": "Find albums similar to the hit album \"Golden Classics\" that have more than 10 tracks and have not been officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find albums similar to the hit album \"Golden Classics\" that have more than 10 tracks and have not been officially released.",
        "target_collection": "MusicAlbums",
        "search_query": "Golden Classics",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "!=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: >10,isReleased"
    },
    {
      "query_index": 153,
      "database_schema_index": 2,
      "natural_language_query": "Find albums with a similar style to 'Abbey Road' but include only those that have more than 10 tracks and are not yet released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find albums with a similar style to 'Abbey Road' but include only those that have more than 10 tracks and are not yet released.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to Abbey Road",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find albums with a similar style to 'Abbey Road' but include only those that have more than 10 tracks and are not yet released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "'Abbey Road'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 154,
      "database_schema_index": 2,
      "natural_language_query": "Show me albums that are semantically similar to \"Greatest Hits\" which have more than 10 tracks and have been released, grouping them by their release status.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me albums that are semantically similar to \"Greatest Hits\" which have more than 10 tracks and have been released, grouping them by their release status.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isReleased"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 155,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums that are similar to \"Greatest Hits\" but have more than 10 tracks and are officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums that are similar to \"Greatest Hits\" but have more than 10 tracks and are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": "similar to 'Greatest Hits'",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isReleased:=true"
    },
    {
      "query_index": 156,
      "database_schema_index": 2,
      "natural_language_query": "Find the total number of unreleased albums with fewer than 10 tracks that are similar to or relevant for lounge music inventories.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the total number of unreleased albums with fewer than 10 tracks that are similar to or relevant for lounge music inventories.",
        "target_collection": "MusicAlbums",
        "search_query": "lounge music inventory",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": "<",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the total number of unreleased albums with fewer than 10 tracks that are similar to or relevant for lounge music inventories.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false,trackCount:<:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 157,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums similar to 'Greatest Hits' that contain at least 10 tracks and are officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums similar to 'Greatest Hits' that contain at least 10 tracks and are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find music albums similar to 'Greatest Hits' that contain at least 10 tracks and are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "'Greatest Hits'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 158,
      "database_schema_index": 2,
      "natural_language_query": "show all top non-released music albums with at least 10 tracks related to 'rock' music",
      "ground_truth_query": {
        "corresponding_natural_language_query": "show all top non-released music albums with at least 10 tracks related to 'rock' music",
        "target_collection": "MusicAlbums",
        "search_query": "rock music",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "show all top non-released music albums with at least 10 tracks related to 'rock' music",
        "target_collection": "MusicAlbums",
        "search_query": "rock",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false,trackCount:>=:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 159,
      "database_schema_index": 2,
      "natural_language_query": "Show me all music albums with at least 10 tracks that are similar to 'Greatest Hits' albums and are already released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all music albums with at least 10 tracks that are similar to 'Greatest Hits' albums and are already released.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 160,
      "database_schema_index": 2,
      "natural_language_query": "Find all artist profiles where the artist name contains 'John', the total number of albums released is greater than 5, the artist is currently active, and calculate the average number of albums released by artists meeting these criteria. Also, group the results by the active status of the artist.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all artist profiles where the artist name contains 'John', the total number of albums released is greater than 5, the artist is currently active, and calculate the average number of albums released by artists meeting these criteria. Also, group the results by the active status of the artist.",
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "totalAlbums",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "artistName",
          "operator": "LIKE",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "totalAlbums",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isActive"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all artist profiles where the artist name contains 'John', the total number of albums released is greater than 5, the artist is currently active, and calculate the average number of albums released by artists meeting these criteria. Also, group the results by the active status of the artist.",
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 161,
      "database_schema_index": 2,
      "natural_language_query": "Show me the average number of tracks for albums titled 'Greatest Hits' that have been released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the average number of tracks for albums titled 'Greatest Hits' that have been released.",
        "target_collection": "MusicAlbums",
        "search_query": "albums similar to 'Greatest Hits'",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 0
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Greatest Hits"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: albumTitle LIKE 'Greatest Hits'"
    },
    {
      "query_index": 162,
      "database_schema_index": 2,
      "natural_language_query": "Retrieve a list of music albums with titles containing 'Greatest Hits', where the albums have more than 12 tracks, and are officially released. Group the results by their release status and provide a count of albums for each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve a list of music albums with titles containing 'Greatest Hits', where the albums have more than 12 tracks, and are officially released. Group the results by their release status and provide a count of albums for each group.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 12
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Greatest Hits"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isReleased"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Retrieve a list of music albums with titles containing 'Greatest Hits', where the albums have more than 12 tracks, and are officially released. Group the results by their release status and provide a count of albums for each group.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 163,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums with more than 10 tracks, include albums that are not yet released, and compute the maximum track count among all distinct albums.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks, include albums that are not yet released, and compute the maximum track count among all distinct albums.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks, include albums that are not yet released, and compute the maximum track count among all distinct albums.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 164,
      "database_schema_index": 2,
      "natural_language_query": "Show all released music albums with more than 10 tracks, searching for any albums similar to 'A Night at the Opera'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all released music albums with more than 10 tracks, searching for any albums similar to 'A Night at the Opera'.",
        "target_collection": "MusicAlbums",
        "search_query": "A Night at the Opera",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 165,
      "database_schema_index": 2,
      "natural_language_query": "Find all albums that have more than 10 tracks, include the word 'Greatest' in their title, and determine how many of them are officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all albums that have more than 10 tracks, include the word 'Greatest' in their title, and determine how many of them are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Greatest%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isReleased",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all albums that have more than 10 tracks, include the word 'Greatest' in their title, and determine how many of them are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 166,
      "database_schema_index": 2,
      "natural_language_query": "List all sold out concert events that have ticket sales greater than 1000 and are grouped by event name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all sold out concert events that have ticket sales greater than 1000 and are grouped by event name.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "ticketSales",
          "operator": ">",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSoldOut",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isSoldOut:=true"
    },
    {
      "query_index": 167,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that have more than 10 tracks, are officially released, and similar to \"Abbey Road\".",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that have more than 10 tracks, are officially released, and similar to \"Abbey Road\".",
        "target_collection": "MusicAlbums",
        "search_query": "Abbey Road",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '10,isReleased:=:true'"
    },
    {
      "query_index": 168,
      "database_schema_index": 2,
      "natural_language_query": "Retrieve all music albums released with 'Greatest Hits' in the title that have more than 10 tracks.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve all music albums released with 'Greatest Hits' in the title that have more than 10 tracks.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Greatest Hits%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Retrieve all music albums released with 'Greatest Hits' in the title that have more than 10 tracks.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 169,
      "database_schema_index": 2,
      "natural_language_query": "Find all released music albums with titles that start with 'Greatest Hits', and compute the average number of tracks per album that match this criteria.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all released music albums with titles that start with 'Greatest Hits', and compute the average number of tracks per album that match this criteria.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Greatest Hits%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all released music albums with titles that start with 'Greatest Hits', and compute the average number of tracks per album that match this criteria.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "'Greatest Hits%'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.875,
      "error": null
    },
    {
      "query_index": 170,
      "database_schema_index": 2,
      "natural_language_query": "Find music albums with the title containing 'Greatest Hits' that have more than 10 tracks and have not been officially released yet. Additionally, count how many such albums exist.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find music albums with the title containing 'Greatest Hits' that have more than 10 tracks and have not been officially released yet. Additionally, count how many such albums exist.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Greatest Hits"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find music albums with the title containing 'Greatest Hits' that have more than 10 tracks and have not been officially released yet. Additionally, count how many such albums exist.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 171,
      "database_schema_index": 2,
      "natural_language_query": "Show me all unreleased music albums with 'Great' in their title, and give me the total number of such albums.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all unreleased music albums with 'Great' in their title, and give me the total number of such albums.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Great%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isReleased:=false"
    },
    {
      "query_index": 172,
      "database_schema_index": 2,
      "natural_language_query": "Find all albums titled \"The Best of Jazz\" that have exactly 10 tracks and are not released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all albums titled \"The Best of Jazz\" that have exactly 10 tracks and are not released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": "=",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "=",
          "value": "The Best of Jazz"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "!=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: albumTitle:='The Best of Jazz'"
    },
    {
      "query_index": 173,
      "database_schema_index": 2,
      "natural_language_query": "Retrieve all music albums with 'Love' in the title, have at least 10 tracks, and are officially released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve all music albums with 'Love' in the title, have at least 10 tracks, and are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Love%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Retrieve all music albums with 'Love' in the title, have at least 10 tracks, and are officially released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 174,
      "database_schema_index": 2,
      "natural_language_query": "Find all concerts with event names starting with 'Summer Fest', which have more than 1000 ticket sales, and are not sold out yet.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all concerts with event names starting with 'Summer Fest', which have more than 1000 ticket sales, and are not sold out yet.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "ticketSales",
          "operator": ">",
          "value": 1000
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "Summer Fest%"
        },
        "boolean_property_filter": {
          "property_name": "isSoldOut",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all concerts with event names starting with 'Summer Fest', which have more than 1000 ticket sales, and are not sold out yet.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 175,
      "database_schema_index": 2,
      "natural_language_query": "List all music albums that have the word 'Holiday' in their title, include exactly 12 tracks, and are unreleased.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all music albums that have the word 'Holiday' in their title, include exactly 12 tracks, and are unreleased.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": "=",
          "value": 12
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Holiday"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all music albums that have the word 'Holiday' in their title, include exactly 12 tracks, and are unreleased.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 176,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that are officially released, contain more than 10 tracks, and have titles matching the description 'Greatest Hits' or similar.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that are officially released, contain more than 10 tracks, and have titles matching the description 'Greatest Hits' or similar.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Greatest Hits%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: =true,trackCount"
    },
    {
      "query_index": 177,
      "database_schema_index": 2,
      "natural_language_query": "Find the average number of tracks for all albums that have been released or are currently in stock.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average number of tracks for all albums that have been released or are currently in stock.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average number of tracks for all albums that have been released or are currently in stock.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 178,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums with more than 10 tracks, which have been released, and are similar to \"Best Hits\" title.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks, which have been released, and are similar to \"Best Hits\" title.",
        "target_collection": "MusicAlbums",
        "search_query": "Best Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks, which have been released, and are similar to \"Best Hits\" title.",
        "target_collection": "MusicAlbums",
        "search_query": "Best Hits",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 179,
      "database_schema_index": 2,
      "natural_language_query": "Show me all albums that are not released, have more than 10 tracks, and whose title includes the word 'Love'. Also, tell me the type of value for the release status.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all albums that are not released, have more than 10 tracks, and whose title includes the word 'Love'. Also, tell me the type of value for the release status.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Love"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "!=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isReleased",
          "metrics": "TYPE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all albums that are not released, have more than 10 tracks, and whose title includes the word 'Love'. Also, tell me the type of value for the release status.",
        "target_collection": "MusicAlbums",
        "search_query": "Love",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "false,trackCount:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 180,
      "database_schema_index": 2,
      "natural_language_query": "Find the number of MusicAlbums that are not released and have at least 10 tracks, and group them by album title.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the number of MusicAlbums that are not released and have at least 10 tracks, and group them by album title.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "albumTitle"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isReleased:=false"
    },
    {
      "query_index": 181,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that contain the word 'Love' in their title and have more than 10 tracks, and count how many of these albums are released versus not released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that contain the word 'Love' in their title and have more than 10 tracks, and count how many of these albums are released versus not released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Love%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isReleased",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: \"10'\""
    },
    {
      "query_index": 182,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums that are released, have more than 10 tracks, and have a title similar to 'Greatest Hits'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums that are released, have more than 10 tracks, and have a title similar to 'Greatest Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums that are released, have more than 10 tracks, and have a title similar to 'Greatest Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": "true,trackCount:>:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 183,
      "database_schema_index": 2,
      "natural_language_query": "Show me all artist profiles where the artists are currently active and have released more than 5 albums, and find me artists similar to those whose name includes 'Beat'. Also, provide an aggregation of the total number of active artists.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all artist profiles where the artists are currently active and have released more than 5 albums, and find me artists similar to those whose name includes 'Beat'. Also, provide an aggregation of the total number of active artists.",
        "target_collection": "ArtistProfiles",
        "search_query": "artists similar to those whose name includes 'Beat'",
        "integer_property_filter": {
          "property_name": "totalAlbums",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "artistName",
          "operator": "LIKE",
          "value": "%Beat%"
        },
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isActive",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isActive:=true"
    },
    {
      "query_index": 184,
      "database_schema_index": 2,
      "natural_language_query": "Retrieve the average number of tracks for all officially released music albums with titles containing 'Greatest' or 'Hits'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve the average number of tracks for all officially released music albums with titles containing 'Greatest' or 'Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Greatest%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Retrieve the average number of tracks for all officially released music albums with titles containing 'Greatest' or 'Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 185,
      "database_schema_index": 2,
      "natural_language_query": "Find the average number of tracks on albums that are released and have titles similar to 'Greatest Hits'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average number of tracks on albums that are released and have titles similar to 'Greatest Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 0
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "%Hits%"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average number of tracks on albums that are released and have titles similar to 'Greatest Hits'.",
        "target_collection": "MusicAlbums",
        "search_query": "Greatest Hits",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 186,
      "database_schema_index": 2,
      "natural_language_query": "Get the list of unique album titles from the MusicAlbums collection and count how often each title appears.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Get the list of unique album titles from the MusicAlbums collection and count how often each title appears.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "albumTitle",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "albumTitle"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Get the list of unique album titles from the MusicAlbums collection and count how often each title appears.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 187,
      "database_schema_index": 2,
      "natural_language_query": "List the top 5 most common album titles in the MusicAlbums collection and their frequency.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List the top 5 most common album titles in the MusicAlbums collection and their frequency.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "albumTitle",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List the top 5 most common album titles in the MusicAlbums collection and their frequency.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 188,
      "database_schema_index": 2,
      "natural_language_query": "Find out how many albums are released and also determine the percentage of albums that are not released by counting how many have and haven't been released.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find out how many albums are released and also determine the percentage of albums that are not released by counting how many have and haven't been released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isReleased",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find out how many albums are released and also determine the percentage of albums that are not released by counting how many have and haven't been released.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 189,
      "database_schema_index": 2,
      "natural_language_query": "Give me the number of sold-out and not sold-out concert events, including what percentage of all events are sold out.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Give me the number of sold-out and not sold-out concert events, including what percentage of all events are sold out.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isSoldOut",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Give me the number of sold-out and not sold-out concert events, including what percentage of all events are sold out.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 190,
      "database_schema_index": 2,
      "natural_language_query": "Show me all concert events that are sold out, grouped by the event name, and include the total ticket sales for each event.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all concert events that are sold out, grouped by the event name, and include the total ticket sales for each event.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "ticketSales",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSoldOut",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "ticketSales",
          "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all concert events that are sold out, grouped by the event name, and include the total ticket sales for each event.",
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSoldOut",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 191,
      "database_schema_index": 2,
      "natural_language_query": "Find all music albums with 'Greatest Hits' in the title, more than 10 tracks, and that are not yet released, then calculate the average track count for these albums.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all music albums with 'Greatest Hits' in the title, more than 10 tracks, and that are not yet released, then calculate the average track count for these albums.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "trackCount",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "albumTitle",
          "operator": "LIKE",
          "value": "Greatest Hits"
        },
        "boolean_property_filter": {
          "property_name": "isReleased",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "trackCount",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all music albums with 'Greatest Hits' in the title, more than 10 tracks, and that are not yet released, then calculate the average track count for these albums.",
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 192,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages similar to 'budget holiday', priced below $500, and are not currently available. Additionally, show the types and total number of unavailable packages with the specified criteria.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages similar to 'budget holiday', priced below $500, and are not currently available. Additionally, show the types and total number of unavailable packages with the specified criteria.",
        "target_collection": "TravelPackages",
        "search_query": "budget holiday",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "TOTAL_FALSE"
        },
        "groupby_property": "packageName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500, isAvailable:=:false'"
    },
    {
      "query_index": 193,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that are similar to 'Summer Vacation' but only those that are available and cost less than $1000.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that are similar to 'Summer Vacation' but only those that are available and cost less than $1000.",
        "target_collection": "TravelPackages",
        "search_query": "Summer Vacation",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages that are similar to 'Summer Vacation' but only those that are available and cost less than $1000.",
        "target_collection": "TravelPackages",
        "search_query": "Summer Vacation",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:<:1000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 194,
      "database_schema_index": 3,
      "natural_language_query": "Retrieve the top 5 travel packages priced under $2000 that are similar to 'luxury vacation', grouping results by availability and showing packages that are available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Retrieve the top 5 travel packages priced under $2000 that are similar to 'luxury vacation', grouping results by availability and showing packages that are available.",
        "target_collection": "TravelPackages",
        "search_query": "luxury vacation",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "isAvailable"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2000, isAvailable:=true'"
    },
    {
      "query_index": 195,
      "database_schema_index": 3,
      "natural_language_query": "Find available travel packages similar to 'summer beach vacation' under $2000.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available travel packages similar to 'summer beach vacation' under $2000.",
        "target_collection": "TravelPackages",
        "search_query": "Find travel packages similar to 'summer beach vacation'",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find available travel packages similar to 'summer beach vacation' under $2000.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "'beach vacation',price:<:2000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 196,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages with semantics similar to 'adventure getaway', priced below $5000, and currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages with semantics similar to 'adventure getaway', priced below $5000, and currently available.",
        "target_collection": "TravelPackages",
        "search_query": "adventure getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 5000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '5000,isAvailable:=:true'"
    },
    {
      "query_index": 197,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages whose names are related to 'Fresh Escape', cost less than $2000, and check if they are available",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages whose names are related to 'Fresh Escape', cost less than $2000, and check if they are available",
        "target_collection": "TravelPackages",
        "search_query": "Fresh Escape",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages whose names are related to 'Fresh Escape', cost less than $2000, and check if they are available",
        "target_collection": "TravelPackages",
        "search_query": "Fresh Escape",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 198,
      "database_schema_index": 3,
      "natural_language_query": "Find the most affordable travel packages similar to 'budget-friendly tours' that are currently available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most affordable travel packages similar to 'budget-friendly tours' that are currently available for booking.",
        "target_collection": "TravelPackages",
        "search_query": "budget-friendly tours",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<=",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the most affordable travel packages similar to 'budget-friendly tours' that are currently available for booking.",
        "target_collection": "TravelPackages",
        "search_query": "budget-friendly tours",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 199,
      "database_schema_index": 3,
      "natural_language_query": "Show me currently available travel packages with prices greater than $1000 and find similar deals to 'Luxury European Getaway'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me currently available travel packages with prices greater than $1000 and find similar deals to 'Luxury European Getaway'.",
        "target_collection": "TravelPackages",
        "search_query": "Luxury European Getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me currently available travel packages with prices greater than $1000 and find similar deals to 'Luxury European Getaway'.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 1000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 200,
      "database_schema_index": 3,
      "natural_language_query": "Show me the most relevant travel package under $2,000 that is available and is similar to a tropical getaway.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the most relevant travel package under $2,000 that is available and is similar to a tropical getaway.",
        "target_collection": "TravelPackages",
        "search_query": "tropical getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2000,isAvailable:=:true'"
    },
    {
      "query_index": 201,
      "database_schema_index": 3,
      "natural_language_query": "Find travelers who are frequent flyers with more than 5 total bookings and search for those with names similar to \"John Alex\".",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travelers who are frequent flyers with more than 5 total bookings and search for those with names similar to \"John Alex\".",
        "target_collection": "Travelers",
        "search_query": "John Alex",
        "integer_property_filter": {
          "property_name": "totalBookings",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isFrequentFlyer",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travelers who are frequent flyers with more than 5 total bookings and search for those with names similar to \"John Alex\".",
        "target_collection": "Travelers",
        "search_query": "John Alex",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 202,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages that mention 'adventure tours' in their description, are available, and cost over $2000.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages that mention 'adventure tours' in their description, are available, and cost over $2000.",
        "target_collection": "TravelPackages",
        "search_query": "adventure tours",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages that mention 'adventure tours' in their description, are available, and cost over $2000.",
        "target_collection": "TravelPackages",
        "search_query": "adventure tours",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:>:2000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 203,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages similar to 'sunset safari' within the price range of $1000 to $5000, and we'll only consider those packages that are available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages similar to 'sunset safari' within the price range of $1000 to $5000, and we'll only consider those packages that are available.",
        "target_collection": "TravelPackages",
        "search_query": "sunset safari",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">=",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,price:<:5000,isAvailable:=:true'"
    },
    {
      "query_index": 204,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages that are similar to a budget-friendly vacation but cost less than $1000 and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages that are similar to a budget-friendly vacation but cost less than $1000 and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "budget-friendly vacation",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,isAvailable:=:true'"
    },
    {
      "query_index": 205,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages with availability, priced under $1000, and similar to 'romantic getaway'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages with availability, priced under $1000, and similar to 'romantic getaway'.",
        "target_collection": "TravelPackages",
        "search_query": "romantic getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages with availability, priced under $1000, and similar to 'romantic getaway'.",
        "target_collection": "TravelPackages",
        "search_query": "romantic getaway",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true, price:<:1000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 206,
      "database_schema_index": 3,
      "natural_language_query": "Identify all travel packages priced under $1000 that are currently available, and show related packages thematically similar to 'luxury family vacation'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify all travel packages priced under $1000 that are currently available, and show related packages thematically similar to 'luxury family vacation'.",
        "target_collection": "TravelPackages",
        "search_query": "luxury family vacation",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,isAvailable:=:true'"
    },
    {
      "query_index": 207,
      "database_schema_index": 3,
      "natural_language_query": "Can you find travel packages that are commonly referred to as 'luxury getaways' which are priced under $5000 and are currently available?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Can you find travel packages that are commonly referred to as 'luxury getaways' which are priced under $5000 and are currently available?",
        "target_collection": "TravelPackages",
        "search_query": "luxury getaways",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<=",
          "value": 5000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Can you find travel packages that are commonly referred to as 'luxury getaways' which are priced under $5000 and are currently available?",
        "target_collection": "TravelPackages",
        "search_query": "luxury getaways",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 208,
      "database_schema_index": 3,
      "natural_language_query": "Show all travel packages that are similar to 'Adventure Package', priced between $500 and $2000, and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all travel packages that are similar to 'Adventure Package', priced between $500 and $2000, and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "Adventure Package",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<=",
          "value": 2000
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "Adventure Package"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500,price:<=:2000,isAvailable:=:true'"
    },
    {
      "query_index": 209,
      "database_schema_index": 3,
      "natural_language_query": "Find available travel packages similar to those visiting Paris that cost less than $1000.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available travel packages similar to those visiting Paris that cost less than $1000.",
        "target_collection": "TravelPackages",
        "search_query": "travel packages similar to those visiting Paris",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,isAvailable:=:true'"
    },
    {
      "query_index": 210,
      "database_schema_index": 3,
      "natural_language_query": "Find me travel packages that are similar to 'Adventurous Mountain Getaway', which are priced below 1000 and are currently available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me travel packages that are similar to 'Adventurous Mountain Getaway', which are priced below 1000 and are currently available for booking.",
        "target_collection": "TravelPackages",
        "search_query": "Adventurous Mountain Getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,isAvailable:=:true'"
    },
    {
      "query_index": 211,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages similar to 'family adventure' that are available and cost less than $3000, and groupby the package name while aggregating the total number of available packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages similar to 'family adventure' that are available and cost less than $3000, and groupby the package name while aggregating the total number of available packages.",
        "target_collection": "TravelPackages",
        "search_query": "family adventure",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 3000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages similar to 'family adventure' that are available and cost less than $3000, and groupby the package name while aggregating the total number of available packages.",
        "target_collection": "TravelPackages",
        "search_query": "family adventure",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:<:3000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 212,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that are currently available, cost less than $1000, and have names similar to 'Adventure Getaway'. Group the results by package name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that are currently available, cost less than $1000, and have names similar to 'Adventure Getaway'. Group the results by package name.",
        "target_collection": "TravelPackages",
        "search_query": "Adventure Getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isAvailable:=true"
    },
    {
      "query_index": 213,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages that are similar to 'Family Adventure Trip' with prices under $1000 and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages that are similar to 'Family Adventure Trip' with prices under $1000 and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "Family Adventure Trip",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,isAvailable:=:true'"
    },
    {
      "query_index": 214,
      "database_schema_index": 3,
      "natural_language_query": "What are the most relevant travel packages that are available, priced between $1,000 and $3,000, suitable for a 'romantic getaway'?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "What are the most relevant travel packages that are available, priced between $1,000 and $3,000, suitable for a 'romantic getaway'?",
        "target_collection": "TravelPackages",
        "search_query": "romantic getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">=",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000,price:<=:3000'"
    },
    {
      "query_index": 215,
      "database_schema_index": 3,
      "natural_language_query": "Show all travel packages similar to 'Luxury Island Retreat' that cost more than $2000 and are unavailable.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all travel packages similar to 'Luxury Island Retreat' that cost more than $2000 and are unavailable.",
        "target_collection": "TravelPackages",
        "search_query": "Luxury Island Retreat",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2000, isAvailable:=:false'"
    },
    {
      "query_index": 216,
      "database_schema_index": 3,
      "natural_language_query": "Find me travel packages with prices less than $1000 that are similar to luxury vacation offerings, and show only those that are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me travel packages with prices less than $1000 that are similar to luxury vacation offerings, and show only those that are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "luxury vacation",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000, isAvailable:=:true'"
    },
    {
      "query_index": 217,
      "database_schema_index": 3,
      "natural_language_query": "Find available travel packages that cost less than $1000 and have semantic relevance to 'budget-friendly vacations'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available travel packages that cost less than $1000 and have semantic relevance to 'budget-friendly vacations'.",
        "target_collection": "TravelPackages",
        "search_query": "budget-friendly vacations",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find available travel packages that cost less than $1000 and have semantic relevance to 'budget-friendly vacations'.",
        "target_collection": "TravelPackages",
        "search_query": "budget-friendly vacations",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 218,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages with prices less than $1000 that are currently available, and also relevant to 'family fun vacation'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages with prices less than $1000 that are currently available, and also relevant to 'family fun vacation'.",
        "target_collection": "TravelPackages",
        "search_query": "family fun vacation",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000, isAvailable:=:true'"
    },
    {
      "query_index": 219,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages with names similar to 'Adventurous Trip', priced below $1000, and currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages with names similar to 'Adventurous Trip', priced below $1000, and currently available.",
        "target_collection": "TravelPackages",
        "search_query": "Adventurous Trip",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '1000, isAvailable:=:true'"
    },
    {
      "query_index": 220,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages similar to \"Coastal Adventure\" that are priced under $5000 and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages similar to \"Coastal Adventure\" that are priced under $5000 and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "Coastal Adventure",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 5000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '5000,isAvailable:=:true'"
    },
    {
      "query_index": 221,
      "database_schema_index": 3,
      "natural_language_query": "Identify affordable vacation packages around the $2,000 mark that are well-suited for families and currently available. Incorporate any relevant suggestions similar to family-friendly trips to Maldives.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify affordable vacation packages around the $2,000 mark that are well-suited for families and currently available. Incorporate any relevant suggestions similar to family-friendly trips to Maldives.",
        "target_collection": "TravelPackages",
        "search_query": "family-friendly trips to Maldives",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<=",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2500,isAvailable:=:true'"
    },
    {
      "query_index": 222,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages similar to luxury vacations that cost less than $2000 and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages similar to luxury vacations that cost less than $2000 and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "luxury vacations",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2000,isAvailable:=true'"
    },
    {
      "query_index": 223,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages that are available, cost less than $1000, and are similar to luxury island getaways.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages that are available, cost less than $1000, and are similar to luxury island getaways.",
        "target_collection": "TravelPackages",
        "search_query": "luxury island getaways",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages that are available, cost less than $1000, and are similar to luxury island getaways.",
        "target_collection": "TravelPackages",
        "search_query": "luxury island getaways",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:<:1000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 224,
      "database_schema_index": 3,
      "natural_language_query": "Find available travel packages where the destination name is similar to 'sunny escape', the price is above $500, and then calculate the total count of packages per destination.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available travel packages where the destination name is similar to 'sunny escape', the price is above $500, and then calculate the total count of packages per destination.",
        "target_collection": "TravelPackages",
        "search_query": "sunny escape",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find available travel packages where the destination name is similar to 'sunny escape', the price is above $500, and then calculate the total count of packages per destination.",
        "target_collection": "TravelPackages",
        "search_query": "sunny escape",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 500.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 225,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that are under $500, are currently available, and also find the minimum and maximum prices among such packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that are under $500, are currently available, and also find the minimum and maximum prices among such packages.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MIN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500, isAvailable:=:true'"
    },
    {
      "query_index": 226,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages available named similar to 'Adventure', priced over $1000, and group results by their availability status, also show the count of packages for each status.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages available named similar to 'Adventure', priced over $1000, and group results by their availability status, also show the count of packages for each status.",
        "target_collection": "TravelPackages",
        "search_query": "Adventure",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isAvailable"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages available named similar to 'Adventure', priced over $1000, and group results by their availability status, also show the count of packages for each status.",
        "target_collection": "TravelPackages",
        "search_query": "Adventure",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 1000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 227,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages whose name includes the word 'adventure', are currently available, and cost less than $500. Then, count how many such packages exist and calculate the average price among them.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages whose name includes the word 'adventure', are currently available, and cost less than $500. Then, count how many such packages exist and calculate the average price among them.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 500
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "adventure"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages whose name includes the word 'adventure', are currently available, and cost less than $500. Then, count how many such packages exist and calculate the average price among them.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 228,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages with a price less than $500, that are currently available, and return the top 3 most frequent package names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages with a price less than $500, that are currently available, and return the top 3 most frequent package names.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500,isAvailable:=:true'"
    },
    {
      "query_index": 229,
      "database_schema_index": 3,
      "natural_language_query": "Find all packages with similar names to 'Adventure Safari' that are priced under $500 and currently available, then show the total number of such packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all packages with similar names to 'Adventure Safari' that are priced under $500 and currently available, then show the total number of such packages.",
        "target_collection": "TravelPackages",
        "search_query": "Adventure Safari",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500,isAvailable:=:true'"
    },
    {
      "query_index": 230,
      "database_schema_index": 3,
      "natural_language_query": "Find all available travel packages that cost less than $2000, and then group them by package name to see how many packages fall under each name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available travel packages that cost less than $2000, and then group them by package name to see how many packages fall under each name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all available travel packages that cost less than $2000, and then group them by package name to see how many packages fall under each name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 231,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that are priced less than $500 and currently available for purchase.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that are priced less than $500 and currently available for purchase.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500,isAvailable:=:true'"
    },
    {
      "query_index": 232,
      "database_schema_index": 3,
      "natural_language_query": "List all travel packages with 'Discover' in the name, priced more than $500, currently available, and group the results by package name to show the number of packages that meet these criteria.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all travel packages with 'Discover' in the name, priced more than $500, currently available, and group the results by package name to show the number of packages that meet these criteria.",
        "target_collection": "TravelPackages",
        "search_query": "Discover",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 500
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "Discover"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "packageName",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all travel packages with 'Discover' in the name, priced more than $500, currently available, and group the results by package name to show the number of packages that meet these criteria.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 233,
      "database_schema_index": 3,
      "natural_language_query": "I want to find travel packages related to 'beach holiday' with a price less than $1000 and currently available, and I need to know the average price of such packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "I want to find travel packages related to 'beach holiday' with a price less than $1000 and currently available, and I need to know the average price of such packages.",
        "target_collection": "TravelPackages",
        "search_query": "beach holiday",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "I want to find travel packages related to 'beach holiday' with a price less than $1000 and currently available, and I need to know the average price of such packages.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 234,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages with 'beach' in the name, priced below 1500 dollars, and not available currently. Then, show how many such packages exist grouped by their name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages with 'beach' in the name, priced below 1500 dollars, and not available currently. Then, show how many such packages exist grouped by their name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1500
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "beach"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages with 'beach' in the name, priced below 1500 dollars, and not available currently. Then, show how many such packages exist grouped by their name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 235,
      "database_schema_index": 3,
      "natural_language_query": "Find all currently available travel packages that have 'Deluxe' in the package name and offer a detailed analysis of all such package names with their occurrence counts.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all currently available travel packages that have 'Deluxe' in the package name and offer a detailed analysis of all such package names with their occurrence counts.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "Deluxe"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all currently available travel packages that have 'Deluxe' in the package name and offer a detailed analysis of all such package names with their occurrence counts.",
        "target_collection": "TravelPackages",
        "search_query": "Deluxe",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 236,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages whose names contain 'Escapade', have a price below 1000, and are available. Additionally, give me the count of such packages where 'Escapade' appears in the name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages whose names contain 'Escapade', have a price below 1000, and are available. Additionally, give me the count of such packages where 'Escapade' appears in the name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "%Escapade%"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages whose names contain 'Escapade', have a price below 1000, and are available. Additionally, give me the count of such packages where 'Escapade' appears in the name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 237,
      "database_schema_index": 3,
      "natural_language_query": "Find the names of travel packages similar to 'Adventure Getaway' that cost less than 2000 and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of travel packages similar to 'Adventure Getaway' that cost less than 2000 and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "Adventure Getaway",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '2000,isAvailable:=:true'"
    },
    {
      "query_index": 238,
      "database_schema_index": 3,
      "natural_language_query": "Find all currently available travel packages named 'Summer Escape'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all currently available travel packages named 'Summer Escape'.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "=",
          "value": "Summer Escape"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all currently available travel packages named 'Summer Escape'.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "=",
          "value": "'Summer Escape',isAvailable:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.875,
      "error": null
    },
    {
      "query_index": 239,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages with the word 'Adventure' in their name, that are priced below $1000, and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages with the word 'Adventure' in their name, that are priced below $1000, and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "Adventure"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages with the word 'Adventure' in their name, that are priced below $1000, and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 240,
      "database_schema_index": 3,
      "natural_language_query": "Show all travel packages that are available and have a price less than $1000, and list the top 3 most common package names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all travel packages that are available and have a price less than $1000, and list the top 3 most common package names.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show all travel packages that are available and have a price less than $1000, and list the top 3 most common package names.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:<:1000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 241,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that are available, with package names that contain the word 'Explorer', and also provide the average and maximum price of these packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that are available, with package names that contain the word 'Explorer', and also provide the average and maximum price of these packages.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "%Explorer%"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages that are available, with package names that contain the word 'Explorer', and also provide the average and maximum price of these packages.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true, packageName:LIKE:'%Explorer%'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.875,
      "error": null
    },
    {
      "query_index": 242,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that are available and cost less than $1000, and group them by their name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that are available and cost less than $1000, and group them by their name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages that are available and cost less than $1000, and group them by their name.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:<:1000"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 243,
      "database_schema_index": 3,
      "natural_language_query": "Show all available travel packages that have a price below $1000, sort them by package name, and count how many packages fall into each half-mile price bracket.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all available travel packages that have a price below $1000, sort them by package name, and count how many packages fall into each half-mile price bracket.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "price"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show all available travel packages that have a price below $1000, sort them by package name, and count how many packages fall into each half-mile price bracket.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 244,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages with 'beach' in the name, priced below $500, that are currently available, and group them by their availability status to see how many packages are available versus unavailable.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages with 'beach' in the name, priced below $500, that are currently available, and group them by their availability status to see how many packages are available versus unavailable.",
        "target_collection": "TravelPackages",
        "search_query": "beach",
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<=",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "COUNT"
        },
        "groupby_property": "isAvailable"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '500,isAvailable:=:true'"
    },
    {
      "query_index": 245,
      "database_schema_index": 3,
      "natural_language_query": "What is the average price of travel packages that are currently available, and provide this information grouped by the package name for a semantic comparison?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "What is the average price of travel packages that are currently available, and provide this information grouped by the package name for a semantic comparison?",
        "target_collection": "TravelPackages",
        "search_query": "semantic comparison of travel packages",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "packageName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "What is the average price of travel packages that are currently available, and provide this information grouped by the package name for a semantic comparison?",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 246,
      "database_schema_index": 3,
      "natural_language_query": "Find all available travel packages under $1000 and group these packages by their availability status to determine the total count of available and unavailable packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available travel packages under $1000 and group these packages by their availability status to determine the total count of available and unavailable packages.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "COUNT"
        },
        "groupby_property": "isAvailable"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all available travel packages under $1000 and group these packages by their availability status to determine the total count of available and unavailable packages.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": "<",
          "value": 1000.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 247,
      "database_schema_index": 3,
      "natural_language_query": "List all travel packages that are currently unavailable, grouped by their price category, and count the number of packages in each category.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all travel packages that are currently unavailable, grouped by their price category, and count the number of packages in each category.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "price"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all travel packages that are currently unavailable, grouped by their price category, and count the number of packages in each category.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 248,
      "database_schema_index": 3,
      "natural_language_query": "What is the average number of bookings made by frequent flyer travelers whose names are similar to 'john'?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "What is the average number of bookings made by frequent flyer travelers whose names are similar to 'john'?",
        "target_collection": "Travelers",
        "search_query": "similar to 'john'",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "travelerName",
          "operator": "LIKE",
          "value": "john"
        },
        "boolean_property_filter": {
          "property_name": "isFrequentFlyer",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "totalBookings",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "What is the average number of bookings made by frequent flyer travelers whose names are similar to 'john'?",
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 249,
      "database_schema_index": 3,
      "natural_language_query": "Show me the average total bookings made by travelers who are frequent flyers and have a name similar to 'John Doe'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the average total bookings made by travelers who are frequent flyers and have a name similar to 'John Doe'.",
        "target_collection": "Travelers",
        "search_query": "similar to 'John Doe'",
        "integer_property_filter": {
          "property_name": "totalBookings",
          "operator": ">",
          "value": 0
        },
        "text_property_filter": {
          "property_name": "travelerName",
          "operator": "LIKE",
          "value": "John Doe"
        },
        "boolean_property_filter": {
          "property_name": "isFrequentFlyer",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "totalBookings",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the average total bookings made by travelers who are frequent flyers and have a name similar to 'John Doe'.",
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isFrequentFlyer",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 250,
      "database_schema_index": 3,
      "natural_language_query": "Find the most common package names among travel packages that are currently available and are priced above $500.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most common package names among travel packages that are currently available and are priced above $500.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the most common package names among travel packages that are currently available and are priced above $500.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,price:>:500"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 251,
      "database_schema_index": 3,
      "natural_language_query": "Find all travel packages that have 'Island' in their name and calculate the distribution of top words in these package names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all travel packages that have 'Island' in their name and calculate the distribution of top words in these package names.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "%Island%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "packageName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all travel packages that have 'Island' in their name and calculate the distribution of top words in these package names.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "'%Island%'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9166666666666666,
      "error": null
    },
    {
      "query_index": 252,
      "database_schema_index": 3,
      "natural_language_query": "Identify the percentage of currently available travel packages named 'Summer Special' and compare it to those that are not available. Group the results by package availability status.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify the percentage of currently available travel packages named 'Summer Special' and compare it to those that are not available. Group the results by package availability status.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "=",
          "value": "Summer Special"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "isAvailable"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: packageName:='Summer Special'"
    },
    {
      "query_index": 253,
      "database_schema_index": 3,
      "natural_language_query": "Find out how many travel packages are currently available versus those that are not, and provide summary statistics on this information.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find out how many travel packages are currently available versus those that are not, and provide summary statistics on this information.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find out how many travel packages are currently available versus those that are not, and provide summary statistics on this information.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 254,
      "database_schema_index": 3,
      "natural_language_query": "Group travel packages based on their availability, and for each group of available packages, find out the maximum price of the package. Also, within these groups, filter packages whose names contain the word 'Luxury' and are available at a price above 1000.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Group travel packages based on their availability, and for each group of available packages, find out the maximum price of the package. Also, within these groups, filter packages whose names contain the word 'Luxury' and are available at a price above 1000.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 1000
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "LIKE",
          "value": "Luxury"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "price",
          "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isAvailable"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isAvailable:=true"
    },
    {
      "query_index": 255,
      "database_schema_index": 3,
      "natural_language_query": "Find travel packages with the name 'Honeymoon Special', that cost more than $1000, and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find travel packages with the name 'Honeymoon Special', that cost more than $1000, and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": "Honeymoon Special",
        "integer_property_filter": {
          "property_name": "price",
          "operator": ">",
          "value": 1000
        },
        "text_property_filter": {
          "property_name": "packageName",
          "operator": "=",
          "value": "Honeymoon Special"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find travel packages with the name 'Honeymoon Special', that cost more than $1000, and are currently available.",
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 256,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages with a vegan option included, priced under $30 per person, and show me the ones most similar to a traditional holiday dinner.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages with a vegan option included, priced under $30 per person, and show me the ones most similar to a traditional holiday dinner.",
        "target_collection": "CateringEventPackages",
        "search_query": "traditional holiday dinner packages",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages with a vegan option included, priced under $30 per person, and show me the ones most similar to a traditional holiday dinner.",
        "target_collection": "CateringEventPackages",
        "search_query": "traditional holiday dinner",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:30"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 257,
      "database_schema_index": 4,
      "natural_language_query": "Find me all events that include the word 'festival' in their names, have a price per person less than $50, and ensure a vegan option is included. Sort the results by the most relevant events to these criteria.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all events that include the word 'festival' in their names, have a price per person less than $50, and ensure a vegan option is included. Sort the results by the most relevant events to these criteria.",
        "target_collection": "CateringEventPackages",
        "search_query": "festival",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:=true"
    },
    {
      "query_index": 258,
      "database_schema_index": 4,
      "natural_language_query": "Find packages including a vegan option from catering events related to 'Luxury' with a price per person under $50.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find packages including a vegan option from catering events related to 'Luxury' with a price per person under $50.",
        "target_collection": "CateringEventPackages",
        "search_query": "Luxury catering",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find packages including a vegan option from catering events related to 'Luxury' with a price per person under $50.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 259,
      "database_schema_index": 4,
      "natural_language_query": "Find me all chefs with more than 10 years of experience who do not specialize in desserts, and show me the most relevant results for chefs with a strong background in international cuisine.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all chefs with more than 10 years of experience who do not specialize in desserts, and show me the most relevant results for chefs with a strong background in international cuisine.",
        "target_collection": "Chefs",
        "search_query": "chefs with a strong background in international cuisine",
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "!=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all chefs with more than 10 years of experience who do not specialize in desserts, and show me the most relevant results for chefs with a strong background in international cuisine.",
        "target_collection": "Chefs",
        "search_query": "international cuisine",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 260,
      "database_schema_index": 4,
      "natural_language_query": "Find all event packages that include vegan options, have prices under $30 per person, and are similar to birthday celebrations.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all event packages that include vegan options, have prices under $30 per person, and are similar to birthday celebrations.",
        "target_collection": "CateringEventPackages",
        "search_query": "birthday celebrations",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all event packages that include vegan options, have prices under $30 per person, and are similar to birthday celebrations.",
        "target_collection": "CateringEventPackages",
        "search_query": "birthday celebration",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:30"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 261,
      "database_schema_index": 4,
      "natural_language_query": "Find details of chefs who specialize in desserts, have been in the industry for more than 5 years, and find Chefs that are similarly qualified to 'expert dessert makers'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find details of chefs who specialize in desserts, have been in the industry for more than 5 years, and find Chefs that are similarly qualified to 'expert dessert makers'.",
        "target_collection": "Chefs",
        "search_query": "expert dessert makers",
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "chefName",
          "operator": "LIKE",
          "value": "%"
        },
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find details of chefs who specialize in desserts, have been in the industry for more than 5 years, and find Chefs that are similarly qualified to 'expert dessert makers'.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 262,
      "database_schema_index": 4,
      "natural_language_query": "Find the highest-rated catering event package that includes vegan options and costs less than $50 per person. Additionally, show packages similar to 'eco-friendly wedding.'",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the highest-rated catering event package that includes vegan options and costs less than $50 per person. Additionally, show packages similar to 'eco-friendly wedding.'",
        "target_collection": "CateringEventPackages",
        "search_query": "eco-friendly wedding",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "ratingScore",
          "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,pricePerPerson"
    },
    {
      "query_index": 263,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages similar to 'Healthy Vegan Party', where the price per person is less than $50, and ensure that these packages also include a vegan option.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages similar to 'Healthy Vegan Party', where the price per person is less than $50, and ensure that these packages also include a vegan option.",
        "target_collection": "CateringEventPackages",
        "search_query": "similar to 'Healthy Vegan Party'",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '50, isVeganIncluded:=:true'"
    },
    {
      "query_index": 264,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages that mention outdoor activities with pricing below $150 per person, ensuring only those with vegan options.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages that mention outdoor activities with pricing below $150 per person, ensuring only those with vegan options.",
        "target_collection": "CateringEventPackages",
        "search_query": "outdoor activities",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 150
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '150,isVeganIncluded:=:true'"
    },
    {
      "query_index": 265,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages that have a vegan option, with prices below $50 per person, and also match events similar to a 'green celebration'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages that have a vegan option, with prices below $50 per person, and also match events similar to a 'green celebration'.",
        "target_collection": "CateringEventPackages",
        "search_query": "green celebration",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "green"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find catering event packages that have a vegan option, with prices below $50 per person, and also match events similar to a 'green celebration'.",
        "target_collection": "CateringEventPackages",
        "search_query": "green celebration",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:50"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 266,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages that cost less than $75 per person and include a vegan option, and also retrieve event packages that are related to corporate lunch settings.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages that cost less than $75 per person and include a vegan option, and also retrieve event packages that are related to corporate lunch settings.",
        "target_collection": "CateringEventPackages",
        "search_query": "corporate lunch",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 75
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '75, isVeganIncluded:=:true'"
    },
    {
      "query_index": 267,
      "database_schema_index": 4,
      "natural_language_query": "Find the names of chefs who have dessert specializations, and match the phrase 'pastry genius' semantically, but only if they have at least 15 years of experience.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of chefs who have dessert specializations, and match the phrase 'pastry genius' semantically, but only if they have at least 15 years of experience.",
        "target_collection": "Chefs",
        "search_query": "pastry genius",
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">=",
          "value": 15
        },
        "text_property_filter": {
          "property_name": "chefName",
          "operator": "LIKE",
          "value": "pastry genius"
        },
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the names of chefs who have dessert specializations, and match the phrase 'pastry genius' semantically, but only if they have at least 15 years of experience.",
        "target_collection": "Chefs",
        "search_query": "pastry genius",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 268,
      "database_schema_index": 4,
      "natural_language_query": "Identify the catering event packages that include vegan options priced below $100 per person, and had the best user reviews mentioning 'luxury experience'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify the catering event packages that include vegan options priced below $100 per person, and had the best user reviews mentioning 'luxury experience'.",
        "target_collection": "CateringEventPackages",
        "search_query": "luxury experience",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Identify the catering event packages that include vegan options priced below $100 per person, and had the best user reviews mentioning 'luxury experience'.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:100"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 269,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering packages that include a vegan option with prices less than $100, and show packages similar to 'Green Gourmet' events.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering packages that include a vegan option with prices less than $100, and show packages similar to 'Green Gourmet' events.",
        "target_collection": "CateringEventPackages",
        "search_query": "Green Gourmet",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering packages that include a vegan option with prices less than $100, and show packages similar to 'Green Gourmet' events.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:100"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 270,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages that include vegan options, cost less than $50 per person, and are similar to a business lunch special.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages that include vegan options, cost less than $50 per person, and are similar to a business lunch special.",
        "target_collection": "CateringEventPackages",
        "search_query": "business lunch special",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,pricePerPerson"
    },
    {
      "query_index": 271,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages that offer vegan options, cost less than $50 per person, and are relevant to wedding celebrations.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages that offer vegan options, cost less than $50 per person, and are relevant to wedding celebrations.",
        "target_collection": "CateringEventPackages",
        "search_query": "wedding celebrations",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true, pricePerPerson"
    },
    {
      "query_index": 272,
      "database_schema_index": 4,
      "natural_language_query": "Find event packages that include a good vegan option, cost less than $50 per person, and are similar to 'family-friendly gatherings.'",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find event packages that include a good vegan option, cost less than $50 per person, and are similar to 'family-friendly gatherings.'",
        "target_collection": "CateringEventPackages",
        "search_query": "family-friendly gatherings",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find event packages that include a good vegan option, cost less than $50 per person, and are similar to 'family-friendly gatherings.'",
        "target_collection": "CateringEventPackages",
        "search_query": "family-friendly gatherings",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:50"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 273,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages for which the event name is similar to 'Grand Vegan Gala', the price per person is less than or equal to $50, and a vegan option is included. Then group the results by event name and count the number of such packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages for which the event name is similar to 'Grand Vegan Gala', the price per person is less than or equal to $50, and a vegan option is included. Then group the results by event name and count the number of such packages.",
        "target_collection": "CateringEventPackages",
        "search_query": "Grand Vegan Gala",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages for which the event name is similar to 'Grand Vegan Gala', the price per person is less than or equal to $50, and a vegan option is included. Then group the results by event name and count the number of such packages.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 274,
      "database_schema_index": 4,
      "natural_language_query": "Find me the catering event packages that include a vegan option, cost no more than $50 per person, and are similar to green or sustainable events.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me the catering event packages that include a vegan option, cost no more than $50 per person, and are similar to green or sustainable events.",
        "target_collection": "CateringEventPackages",
        "search_query": "similar to green or sustainable events",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me the catering event packages that include a vegan option, cost no more than $50 per person, and are similar to green or sustainable events.",
        "target_collection": "CateringEventPackages",
        "search_query": "green sustainable",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<=:50"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 275,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages that are reasonably priced and include vegan options, emphasizing events that have similar features to our annual vegan gala.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages that are reasonably priced and include vegan options, emphasizing events that have similar features to our annual vegan gala.",
        "target_collection": "CateringEventPackages",
        "search_query": "annual vegan gala",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:true"
    },
    {
      "query_index": 276,
      "database_schema_index": 4,
      "natural_language_query": "Find me all chefs specializing in desserts with over 5 years of experience who have received predominantly positive feedback in ClientReviews, even if the reviews used different phraseology to describe positive experiences.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all chefs specializing in desserts with over 5 years of experience who have received predominantly positive feedback in ClientReviews, even if the reviews used different phraseology to describe positive experiences.",
        "target_collection": "Chefs",
        "search_query": "positive experience feedback",
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "chefName",
          "operator": "=",
          "value": ""
        },
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all chefs specializing in desserts with over 5 years of experience who have received predominantly positive feedback in ClientReviews, even if the reviews used different phraseology to describe positive experiences.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 277,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages that are similar in concept to 'healthy banquet' and that include vegan options, and identify the number of packages that are either under $50 per person or exactly $50.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages that are similar in concept to 'healthy banquet' and that include vegan options, and identify the number of packages that are either under $50 per person or exactly $50.",
        "target_collection": "CateringEventPackages",
        "search_query": "similar to 'healthy banquet'",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:true"
    },
    {
      "query_index": 278,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages that include vegan options, cost less than $50 per person, and are similar (in terms of event scope or feel) to 'Healthy Lifestyle Retreats'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages that include vegan options, cost less than $50 per person, and are similar (in terms of event scope or feel) to 'Healthy Lifestyle Retreats'.",
        "target_collection": "CateringEventPackages",
        "search_query": "similar to 'Healthy Lifestyle Retreats'",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:true"
    },
    {
      "query_index": 279,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages that are similar to 'vegan gala dinner', include a vegan option, and cost less than $50 per person.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages that are similar to 'vegan gala dinner', include a vegan option, and cost less than $50 per person.",
        "target_collection": "CateringEventPackages",
        "search_query": "vegan gala dinner",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,pricePerPerson"
    },
    {
      "query_index": 280,
      "database_schema_index": 4,
      "natural_language_query": "List all catering event packages where there is a vegan option included and the price per person is below $30. Additionally, provide similar events to the \"Green Gala\" event, enriching results with semantic matches.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all catering event packages where there is a vegan option included and the price per person is below $30. Additionally, provide similar events to the \"Green Gala\" event, enriching results with semantic matches.",
        "target_collection": "CateringEventPackages",
        "search_query": "similar to Green Gala",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '30, isVeganIncluded:=:true'"
    },
    {
      "query_index": 281,
      "database_schema_index": 4,
      "natural_language_query": "Find the most cost-effective catering event packages that include vegan options and have received predominantly positive reviews, while considering any related or synonymous event themes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most cost-effective catering event packages that include vegan options and have received predominantly positive reviews, while considering any related or synonymous event themes.",
        "target_collection": "CateringEventPackages",
        "search_query": "affordable event themes",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the most cost-effective catering event packages that include vegan options and have received predominantly positive reviews, while considering any related or synonymous event themes.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 282,
      "database_schema_index": 4,
      "natural_language_query": "Find me all catering event packages that include vegan options, are priced below $100 per person, and are most similar to 'luxurious banquet packages'. Group these results by event name and provide a summary of the top occurrences.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all catering event packages that include vegan options, are priced below $100 per person, and are most similar to 'luxurious banquet packages'. Group these results by event name and provide a summary of the top occurrences.",
        "target_collection": "CateringEventPackages",
        "search_query": "luxurious banquet packages",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,pricePerPerson"
    },
    {
      "query_index": 283,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages that offer vegan options and have a price per person less than $50, and also provide events similar to 'corporate lunch'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages that offer vegan options and have a price per person less than $50, and also provide events similar to 'corporate lunch'.",
        "target_collection": "CateringEventPackages",
        "search_query": "corporate lunch",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages that offer vegan options and have a price per person less than $50, and also provide events similar to 'corporate lunch'.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:50"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 284,
      "database_schema_index": 4,
      "natural_language_query": "List all catering event packages that are highly anticipated, with prices similar to gourmet events, which include vegan options.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all catering event packages that are highly anticipated, with prices similar to gourmet events, which include vegan options.",
        "target_collection": "CateringEventPackages",
        "search_query": "gourmet events",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 80
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "highly anticipated"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all catering event packages that are highly anticipated, with prices similar to gourmet events, which include vegan options.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 285,
      "database_schema_index": 4,
      "natural_language_query": "Find all event packages with 'Christmas party' in the event description, priced above $150 per person and including vegan options. Then group these by whether the package includes vegan options and find out how many have positive feedback from client reviews.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all event packages with 'Christmas party' in the event description, priced above $150 per person and including vegan options. Then group these by whether the package includes vegan options and find out how many have positive feedback from client reviews.",
        "target_collection": "CateringEventPackages",
        "search_query": "Christmas party",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 150
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isPositiveFeedback",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "isVeganIncluded"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all event packages with 'Christmas party' in the event description, priced above $150 per person and including vegan options. Then group these by whether the package includes vegan options and find out how many have positive feedback from client reviews.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "'Christmas party',pricePerPerson:>:150,isVeganIncluded:TRUE"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 286,
      "database_schema_index": 4,
      "natural_language_query": "Find highly rated catering event packages that include vegan options and are similar to ecological event packages around $50 per person.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find highly rated catering event packages that include vegan options and are similar to ecological event packages around $50 per person.",
        "target_collection": "CateringEventPackages",
        "search_query": "ecological event packages",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<=",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find highly rated catering event packages that include vegan options and are similar to ecological event packages around $50 per person.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:<:60"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 287,
      "database_schema_index": 4,
      "natural_language_query": "Find catering packages where vegan options are included, the price per person is less than $50, and also consider similar event names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering packages where vegan options are included, the price per person is less than $50, and also consider similar event names.",
        "target_collection": "CateringEventPackages",
        "search_query": "similar event names",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,pricePerPerson"
    },
    {
      "query_index": 288,
      "database_schema_index": 4,
      "natural_language_query": "Show me the details of events with a price per person greater than $25 that include a vegan option, and display the number of such events.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the details of events with a price per person greater than $25 that include a vegan option, and display the number of such events.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 25
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '25,isVeganIncluded:=:true'"
    },
    {
      "query_index": 289,
      "database_schema_index": 4,
      "natural_language_query": "List all chefs who have more than 10 years of experience and specialize in desserts, and compute the average years of experience for these chefs.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all chefs who have more than 10 years of experience and specialize in desserts, and compute the average years of experience for these chefs.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "yearsOfExperience",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all chefs who have more than 10 years of experience and specialize in desserts, and compute the average years of experience for these chefs.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 290,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages where the price per person is less than $75, include only those where a vegan option is included, and display the top 3 most common event names. Also, group these packages by whether they include a vegan option and show the count of each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages where the price per person is less than $75, include only those where a vegan option is included, and display the top 3 most common event names. Also, group these packages by whether they include a vegan option and show the count of each group.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 75
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": "isVeganIncluded"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages where the price per person is less than $75, include only those where a vegan option is included, and display the top 3 most common event names. Also, group these packages by whether they include a vegan option and show the count of each group.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 291,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages that cost less than $50 per person, include a vegan option, and have received positive feedback from clients, while showing the most experienced chef's name working on that event package if the chef specializes in desserts.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages that cost less than $50 per person, include a vegan option, and have received positive feedback from clients, while showing the most experienced chef's name working on that event package if the chef specializes in desserts.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "chefName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 1
        },
        "boolean_property_aggregation": null,
        "groupby_property": "yearsOfExperience"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '50,isVeganIncluded:=:true'"
    },
    {
      "query_index": 292,
      "database_schema_index": 4,
      "natural_language_query": "Find all chefs with more than 10 years of experience who specialize in desserts, and group them by their name to analyze the count by specialization.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all chefs with more than 10 years of experience who specialize in desserts, and group them by their name to analyze the count by specialization.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "chefName",
          "operator": "LIKE",
          "value": "%"
        },
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "chefName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all chefs with more than 10 years of experience who specialize in desserts, and group them by their name to analyze the count by specialization.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 293,
      "database_schema_index": 4,
      "natural_language_query": "Find catering event packages where the event name is similar to 'Grand Gala Night', the price per person is less than $50, and the package includes a vegan option. Also, show the average price per person for these events and determine how many include a vegan option versus those that do not.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find catering event packages where the event name is similar to 'Grand Gala Night', the price per person is less than $50, and the package includes a vegan option. Also, show the average price per person for these events and determine how many include a vegan option versus those that do not.",
        "target_collection": "CateringEventPackages",
        "search_query": "Grand Gala Night",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVeganIncluded",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '50, isVeganIncluded:=:true'"
    },
    {
      "query_index": 294,
      "database_schema_index": 4,
      "natural_language_query": "Find the average price per person of catering event packages that include vegan options and group the results by event name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average price per person of catering event packages that include vegan options and group the results by event name.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average price per person of catering event packages that include vegan options and group the results by event name.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 295,
      "database_schema_index": 4,
      "natural_language_query": "Find me all catering event packages with a price per person greater than $50 that include vegan options, and aggregate these results to show the average price per person.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all catering event packages with a price per person greater than $50 that include vegan options, and aggregate these results to show the average price per person.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all catering event packages with a price per person greater than $50 that include vegan options, and aggregate these results to show the average price per person.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 296,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages where the event name includes 'Birthday', the price per person is greater than $50, and vegan options are included. Group the results by event name and calculate the average price per person for each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages where the event name includes 'Birthday', the price per person is greater than $50, and vegan options are included. Group the results by event name and calculate the average price per person for each group.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "Birthday"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages where the event name includes 'Birthday', the price per person is greater than $50, and vegan options are included. Group the results by event name and calculate the average price per person for each group.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 297,
      "database_schema_index": 4,
      "natural_language_query": "Show me all catering event packages with 'wedding' in their EventName, priced below $100 per person, and include a vegan option.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all catering event packages with 'wedding' in their EventName, priced below $100 per person, and include a vegan option.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 100
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "wedding"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all catering event packages with 'wedding' in their EventName, priced below $100 per person, and include a vegan option.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 298,
      "database_schema_index": 4,
      "natural_language_query": "Find all event packages that include 'conference' in their name, cost more than $30 per person, and have a vegan option. Additionally, group the results by the event name and list the top 3 most common names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all event packages that include 'conference' in their name, cost more than $30 per person, and have a vegan option. Additionally, group the results by the event name and list the top 3 most common names.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "%conference%"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all event packages that include 'conference' in their name, cost more than $30 per person, and have a vegan option. Additionally, group the results by the event name and list the top 3 most common names.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 299,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages that include the word 'Wedding' in their event name, where the price per person is greater than $50 and includes a vegan option. Additionally, count the number of such packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages that include the word 'Wedding' in their event name, where the price per person is greater than $50 and includes a vegan option. Additionally, count the number of such packages.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "Wedding"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages that include the word 'Wedding' in their event name, where the price per person is greater than $50 and includes a vegan option. Additionally, count the number of such packages.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 300,
      "database_schema_index": 4,
      "natural_language_query": "Find all events where the name includes 'Gala', the price per person is less than 50, and vegan options are included. Additionally, group the results by price ranges and count how many events fall into each category.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all events where the name includes 'Gala', the price per person is less than 50, and vegan options are included. Additionally, group the results by price ranges and count how many events fall into each category.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "Gala"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "pricePerPerson"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all events where the name includes 'Gala', the price per person is less than 50, and vegan options are included. Additionally, group the results by price ranges and count how many events fall into each category.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 301,
      "database_schema_index": 4,
      "natural_language_query": "Find the names of chefs who have at least 10 years of experience, do not specialize in desserts, and gather the types of reviews that have a perfect score of 5 from clients named 'John'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of chefs who have at least 10 years of experience, do not specialize in desserts, and gather the types of reviews that have a perfect score of 5 from clients named 'John'.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "clientName",
          "operator": "=",
          "value": "John"
        },
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isPositiveFeedback",
          "metrics": "TYPE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the names of chefs who have at least 10 years of experience, do not specialize in desserts, and gather the types of reviews that have a perfect score of 5 from clients named 'John'.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 302,
      "database_schema_index": 4,
      "natural_language_query": "Find all event packages for which the EventName exactly matches 'Luxury Corporate Gala', group them by IsVeganIncluded, and filter to only show options with PricePerPerson greater than 100.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all event packages for which the EventName exactly matches 'Luxury Corporate Gala', group them by IsVeganIncluded, and filter to only show options with PricePerPerson greater than 100.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 100
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "=",
          "value": "Luxury Corporate Gala"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isVeganIncluded"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: ='Luxury Corporate Gala', pricePerPerson"
    },
    {
      "query_index": 303,
      "database_schema_index": 4,
      "natural_language_query": "I want to find all catering event packages where the event includes the keyword 'Wedding', the price per person is greater than 100, and the package includes a vegan option. Additionally, I want to count the number of such packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "I want to find all catering event packages where the event includes the keyword 'Wedding', the price per person is greater than 100, and the package includes a vegan option. Additionally, I want to count the number of such packages.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 100
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "Wedding"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '100, isVeganIncluded:=:true'"
    },
    {
      "query_index": 304,
      "database_schema_index": 4,
      "natural_language_query": "Find the names of chefs who specialize in desserts and have more than 10 years of experience, and group these chefs by the number of years they have been working.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the names of chefs who specialize in desserts and have more than 10 years of experience, and group these chefs by the number of years they have been working.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "yearsOfExperience"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the names of chefs who specialize in desserts and have more than 10 years of experience, and group these chefs by the number of years they have been working.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 305,
      "database_schema_index": 4,
      "natural_language_query": "Find all chefs who specialize in desserts and have more than 5 years of experience, grouped by specialization, and show the average years of experience for each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all chefs who specialize in desserts and have more than 5 years of experience, grouped by specialization, and show the average years of experience for each group.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "yearsOfExperience",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isSpecialistInDesserts"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isSpecialistInDesserts:=true"
    },
    {
      "query_index": 306,
      "database_schema_index": 4,
      "natural_language_query": "Find the number of events that offer vegan options and have a price per person greater than 100, grouped by event name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the number of events that offer vegan options and have a price per person greater than 100, grouped by event name.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the number of events that offer vegan options and have a price per person greater than 100, grouped by event name.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 307,
      "database_schema_index": 4,
      "natural_language_query": "Find vegan catering events where the package includes the word 'Deluxe', and list the average price per person for these packages.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find vegan catering events where the package includes the word 'Deluxe', and list the average price per person for these packages.",
        "target_collection": "CateringEventPackages",
        "search_query": "Deluxe",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find vegan catering events where the package includes the word 'Deluxe', and list the average price per person for these packages.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 308,
      "database_schema_index": 4,
      "natural_language_query": "Show me the event packages with less than $50 per person where vegan options are included, and aggregate the results to find how many such packages exist.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the event packages with less than $50 per person where vegan options are included, and aggregate the results to find how many such packages exist.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVeganIncluded",
          "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '50,isVeganIncluded:=:true'"
    },
    {
      "query_index": 309,
      "database_schema_index": 4,
      "natural_language_query": "Give me a summary of the catering event packages that include a vegan option and have an average client rating greater than 4, while also returning only those packages where a detailed search match includes the name 'Grand Celebration'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Give me a summary of the catering event packages that include a vegan option and have an average client rating greater than 4, while also returning only those packages where a detailed search match includes the name 'Grand Celebration'.",
        "target_collection": "CateringEventPackages",
        "search_query": "Grand Celebration",
        "integer_property_filter": {
          "property_name": "ratingScore",
          "operator": ">",
          "value": 4
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVeganIncluded",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:true"
    },
    {
      "query_index": 310,
      "database_schema_index": 4,
      "natural_language_query": "List all catering event packages whose name includes 'wedding', priced below $100 per person, with vegan options, grouped by event names.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all catering event packages whose name includes 'wedding', priced below $100 per person, with vegan options, grouped by event names.",
        "target_collection": "CateringEventPackages",
        "search_query": "wedding",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 100
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "wedding"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all catering event packages whose name includes 'wedding', priced below $100 per person, with vegan options, grouped by event names.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "'wedding%',pricePerPerson:<:100,isVeganIncluded:=:true'"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.55,
      "error": null
    },
    {
      "query_index": 311,
      "database_schema_index": 4,
      "natural_language_query": "Find all catering event packages where the event name is similar to 'Gala Dinner', costs less than $50 per person, and includes a vegan option.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all catering event packages where the event name is similar to 'Gala Dinner', costs less than $50 per person, and includes a vegan option.",
        "target_collection": "CateringEventPackages",
        "search_query": "Gala Dinner",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 50
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "%Gala%"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all catering event packages where the event name is similar to 'Gala Dinner', costs less than $50 per person, and includes a vegan option.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "'Gala Dinner',pricePerPerson:<:50,isVeganIncluded:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 312,
      "database_schema_index": 4,
      "natural_language_query": "What are the average rating scores for each client who provided positive feedback, and please filter out all reviews with scores less than 3.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "What are the average rating scores for each client who provided positive feedback, and please filter out all reviews with scores less than 3.",
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "ratingScore",
          "operator": ">=",
          "value": 3
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isPositiveFeedback",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "ratingScore",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "clientName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isPositiveFeedback:=true"
    },
    {
      "query_index": 313,
      "database_schema_index": 4,
      "natural_language_query": "Show me the average price per person of all catering event packages that include a vegan option, grouped by those with positive feedback and those without, and only consider events where the price per person is greater than $50.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the average price per person of all catering event packages that include a vegan option, grouped by those with positive feedback and those without, and only consider events where the price per person is greater than $50.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": ">",
          "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isPositiveFeedback"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the average price per person of all catering event packages that include a vegan option, grouped by those with positive feedback and those without, and only consider events where the price per person is greater than $50.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": "true,pricePerPerson:>:50"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 314,
      "database_schema_index": 4,
      "natural_language_query": "List all events containing 'reception' in their name, compute the top 5 most common event names, and show only events where vegan options are included.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all events containing 'reception' in their name, compute the top 5 most common event names, and show only events where vegan options are included.",
        "target_collection": "CateringEventPackages",
        "search_query": "reception",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "%reception%"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:=true"
    },
    {
      "query_index": 315,
      "database_schema_index": 4,
      "natural_language_query": "Find out which chefs who specialize in desserts have over 20 years of experience and the top 5 most reviewed events in which they were involved.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find out which chefs who specialize in desserts have over 20 years of experience and the top 5 most reviewed events in which they were involved.",
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "yearsOfExperience",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "=",
          "value": "specialize in desserts"
        },
        "boolean_property_filter": {
          "property_name": "isSpecialistInDesserts",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "eventName",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: true,yearsOfExperience"
    },
    {
      "query_index": 316,
      "database_schema_index": 4,
      "natural_language_query": "Find the Catering Event Packages that include vegan options and calculate the percentage of packages that offer vegan options out of the total packages, then group the results by whether vegan options are included or not.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the Catering Event Packages that include vegan options and calculate the percentage of packages that offer vegan options out of the total packages, then group the results by whether vegan options are included or not.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isVeganIncluded",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "isVeganIncluded"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the Catering Event Packages that include vegan options and calculate the percentage of packages that offer vegan options out of the total packages, then group the results by whether vegan options are included or not.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 317,
      "database_schema_index": 4,
      "natural_language_query": "Show me the percentage of ClientReviews that are positive feedback and include only reviews with a rating score of 4 or higher where the positive feedback has been recorded.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the percentage of ClientReviews that are positive feedback and include only reviews with a rating score of 4 or higher where the positive feedback has been recorded.",
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "ratingScore",
          "operator": ">=",
          "value": 4
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isPositiveFeedback",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isPositiveFeedback",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the percentage of ClientReviews that are positive feedback and include only reviews with a rating score of 4 or higher where the positive feedback has been recorded.",
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 318,
      "database_schema_index": 4,
      "natural_language_query": "List all catering event packages that include vegan options and group the results by event name, then sort by the average price per person for each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all catering event packages that include vegan options and group the results by event name, then sort by the average price per person for each group.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "eventName",
          "operator": "LIKE",
          "value": "%"
        },
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "pricePerPerson",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "eventName"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all catering event packages that include vegan options and group the results by event name, then sort by the average price per person for each group.",
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 319,
      "database_schema_index": 4,
      "natural_language_query": "Find events with 'wedding' in the name, costing less than 100 per person, that include vegan options. Also, group them by whether vegan options are included.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find events with 'wedding' in the name, costing less than 100 per person, that include vegan options. Also, group them by whether vegan options are included.",
        "target_collection": "CateringEventPackages",
        "search_query": "wedding",
        "integer_property_filter": {
          "property_name": "pricePerPerson",
          "operator": "<",
          "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isVeganIncluded",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "isVeganIncluded"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isVeganIncluded:=true"
    },
    {
      "query_index": 320,
      "database_schema_index": 5,
      "natural_language_query": "Find me all fitness classes related to 'yoga', available for booking, and longer than 45 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all fitness classes related to 'yoga', available for booking, and longer than 45 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all fitness classes related to 'yoga', available for booking, and longer than 45 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,durationMinutes:>:45"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 321,
      "database_schema_index": 5,
      "natural_language_query": "Find me all fitness classes similar to yoga classes that last more than 60 minutes and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all fitness classes similar to yoga classes that last more than 60 minutes and are currently available.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga classes",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '60,isAvailable:=:true'"
    },
    {
      "query_index": 322,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes related to 'yoga' or 'meditation' that last for at least 45 minutes and are available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes related to 'yoga' or 'meditation' that last for at least 45 minutes and are available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga meditation",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: className LIKE '%yoga%'"
    },
    {
      "query_index": 323,
      "database_schema_index": 5,
      "natural_language_query": "Find all currently available fitness classes with durations longer than 45 minutes that are similar to 'cardio blast'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all currently available fitness classes with durations longer than 45 minutes that are similar to 'cardio blast'.",
        "target_collection": "FitnessClasses",
        "search_query": "cardio blast",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '45,isAvailable:=:true'"
    },
    {
      "query_index": 324,
      "database_schema_index": 5,
      "natural_language_query": "Find the most relevant fitness classes to 'yoga training', but only those that are available and have a duration greater than 30 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most relevant fitness classes to 'yoga training', but only those that are available and have a duration greater than 30 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga training",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the most relevant fitness classes to 'yoga training', but only those that are available and have a duration greater than 30 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga training",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,durationMinutes:>:30"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 325,
      "database_schema_index": 5,
      "natural_language_query": "Find available gym classes for workouts similar to 'HIIT session', that last more than 45 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available gym classes for workouts similar to 'HIIT session', that last more than 45 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "HIIT session",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find available gym classes for workouts similar to 'HIIT session', that last more than 45 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "HIIT session",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 326,
      "database_schema_index": 5,
      "natural_language_query": "Find all available fitness classes that have a duration of less than 45 minutes and are similar to high-intensity interval training classes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that have a duration of less than 45 minutes and are similar to high-intensity interval training classes.",
        "target_collection": "FitnessClasses",
        "search_query": "high-intensity interval training",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '45,isAvailable:=:true'"
    },
    {
      "query_index": 327,
      "database_schema_index": 5,
      "natural_language_query": "Find the most suitable fitness classes that are currently available, last less than 60 minutes, and are similar to 'high-intensity interval training'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the most suitable fitness classes that are currently available, last less than 60 minutes, and are similar to 'high-intensity interval training'.",
        "target_collection": "FitnessClasses",
        "search_query": "high-intensity interval training",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: =true,durationMinutes"
    },
    {
      "query_index": 328,
      "database_schema_index": 5,
      "natural_language_query": "Show all fitness classes similar to 'morning yoga' that last between 45 and 60 minutes and are currently available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all fitness classes similar to 'morning yoga' that last between 45 and 60 minutes and are currently available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": "morning yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '45,durationMinutes:<=:60,isAvailable:=:true'"
    },
    {
      "query_index": 329,
      "database_schema_index": 5,
      "natural_language_query": "List all available fitness classes similar to yoga that last more than 60 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "List all available fitness classes similar to yoga that last more than 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "fitness classes similar to yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "List all available fitness classes similar to yoga that last more than 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 330,
      "database_schema_index": 5,
      "natural_language_query": "Find all available fitness classes that are similar to yoga, have a class duration greater than 60 minutes, and include innovative stretching techniques.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that are similar to yoga, have a class duration greater than 60 minutes, and include innovative stretching techniques.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga innovative stretching",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that are similar to yoga, have a class duration greater than 60 minutes, and include innovative stretching techniques.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 331,
      "database_schema_index": 5,
      "natural_language_query": "Find fitness classes that are like yoga, have a duration less than 60 minutes, and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find fitness classes that are like yoga, have a duration less than 60 minutes, and are currently available.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '60,isAvailable:=:true'"
    },
    {
      "query_index": 332,
      "database_schema_index": 5,
      "natural_language_query": "Find me the longest available yoga classes at the gym that are most similar to intense training sessions.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me the longest available yoga classes at the gym that are most similar to intense training sessions.",
        "target_collection": "FitnessClasses",
        "search_query": "intense training sessions",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 90
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "yoga"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: className LIKE '%yoga%'"
    },
    {
      "query_index": 333,
      "database_schema_index": 5,
      "natural_language_query": "Find available fitness classes whose names are similar to 'yoga', longer than 30 minutes, and currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available fitness classes whose names are similar to 'yoga', longer than 30 minutes, and currently available.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '30,isAvailable:=:true'"
    },
    {
      "query_index": 334,
      "database_schema_index": 5,
      "natural_language_query": "Find me currently available fitness classes that take less than 30 minutes, and show me anything similar to 'yoga' classes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me currently available fitness classes that take less than 30 minutes, and show me anything similar to 'yoga' classes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me currently available fitness classes that take less than 30 minutes, and show me anything similar to 'yoga' classes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 30.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 335,
      "database_schema_index": 5,
      "natural_language_query": "Find me all currently available gym classes related to yoga that last more than 60 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all currently available gym classes related to yoga that last more than 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all currently available gym classes related to yoga that last more than 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 336,
      "database_schema_index": 5,
      "natural_language_query": "Show me the names and details of certified trainers who currently handle more than 10 clients, and have their names similar to 'Chris'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the names and details of certified trainers who currently handle more than 10 clients, and have their names similar to 'Chris'.",
        "target_collection": "FitnessTrainers",
        "search_query": "Chris",
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the names and details of certified trainers who currently handle more than 10 clients, and have their names similar to 'Chris'.",
        "target_collection": "FitnessTrainers",
        "search_query": "Chris",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 337,
      "database_schema_index": 5,
      "natural_language_query": "Find available fitness classes related to yoga that last exactly 60 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available fitness classes related to yoga that last exactly 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find available fitness classes related to yoga that last exactly 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 60.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 338,
      "database_schema_index": 5,
      "natural_language_query": "Show all available fitness classes whose names are similar to 'yoga', lasting less than 60 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show all available fitness classes whose names are similar to 'yoga', lasting less than 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show all available fitness classes whose names are similar to 'yoga', lasting less than 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 339,
      "database_schema_index": 5,
      "natural_language_query": "Find out which available yoga classes have durations longer than 60 minutes, especially my favorite class 'Vinyasa Flow'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find out which available yoga classes have durations longer than 60 minutes, especially my favorite class 'Vinyasa Flow'.",
        "target_collection": "FitnessClasses",
        "search_query": "Vinyasa Flow",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "yoga"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find out which available yoga classes have durations longer than 60 minutes, especially my favorite class 'Vinyasa Flow'.",
        "target_collection": "FitnessClasses",
        "search_query": "Vinyasa Flow",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,durationMinutes:>:60"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 340,
      "database_schema_index": 5,
      "natural_language_query": "Find fitness trainers who handle more than 20 clients and are certified, focusing specifically on popular fitness programs such as yoga or pilates to get all relevant trainers.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find fitness trainers who handle more than 20 clients and are certified, focusing specifically on popular fitness programs such as yoga or pilates to get all relevant trainers.",
        "target_collection": "FitnessTrainers",
        "search_query": "popular fitness programs such as yoga or pilates",
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find fitness trainers who handle more than 20 clients and are certified, focusing specifically on popular fitness programs such as yoga or pilates to get all relevant trainers.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 341,
      "database_schema_index": 5,
      "natural_language_query": "Find available fitness classes that are similar to yoga classes but are at least 45 minutes long.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find available fitness classes that are similar to yoga classes but are at least 45 minutes long.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find available fitness classes that are similar to yoga classes but are at least 45 minutes long.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 45.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 342,
      "database_schema_index": 5,
      "natural_language_query": "I want to find all available fitness classes that are around 60 minutes, with relevance to classes similar to \"yoga\"",
      "ground_truth_query": {
        "corresponding_natural_language_query": "I want to find all available fitness classes that are around 60 minutes, with relevance to classes similar to \"yoga\"",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<=",
          "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '50, durationMinutes:<=:70, isAvailable:=:true'"
    },
    {
      "query_index": 343,
      "database_schema_index": 5,
      "natural_language_query": "I want to find available gym fitness classes related to yoga or meditation, lasting under 60 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "I want to find available gym fitness classes related to yoga or meditation, lasting under 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga or meditation",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "I want to find available gym fitness classes related to yoga or meditation, lasting under 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 344,
      "database_schema_index": 5,
      "natural_language_query": "Find fitness classes similar to yoga that last at least 60 minutes and are currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find fitness classes similar to yoga that last at least 60 minutes and are currently available.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '60,isAvailable:=:true'"
    },
    {
      "query_index": 345,
      "database_schema_index": 5,
      "natural_language_query": "Which available fitness classes at the gym are good for beginners?",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Which available fitness classes at the gym are good for beginners?",
        "target_collection": "FitnessClasses",
        "search_query": "beginner-friendly",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<=",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "yoga"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Which available fitness classes at the gym are good for beginners?",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 346,
      "database_schema_index": 5,
      "natural_language_query": "Show me all currently available yoga classes offered by the gym that are no longer than 60 minutes and similar to advanced yoga sessions.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all currently available yoga classes offered by the gym that are no longer than 60 minutes and similar to advanced yoga sessions.",
        "target_collection": "FitnessClasses",
        "search_query": "advanced yoga sessions",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<=",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "yoga"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all currently available yoga classes offered by the gym that are no longer than 60 minutes and similar to advanced yoga sessions.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 347,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes that are exactly 30 minutes long and currently available, and then list those that are similar to yoga-based sessions.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes that are exactly 30 minutes long and currently available, and then list those that are similar to yoga-based sessions.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga-based sessions",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all fitness classes that are exactly 30 minutes long and currently available, and then list those that are similar to yoga-based sessions.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": "30,isAvailable:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 348,
      "database_schema_index": 5,
      "natural_language_query": "Show me all fitness classes similar to 'high-intensity interval training', that are longer than 20 minutes and currently available.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all fitness classes similar to 'high-intensity interval training', that are longer than 20 minutes and currently available.",
        "target_collection": "FitnessClasses",
        "search_query": "high-intensity interval training",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '20,isAvailable:=:true'"
    },
    {
      "query_index": 349,
      "database_schema_index": 5,
      "natural_language_query": "Find a list of all gym members who are currently active with at least 12 months of membership, but only those that are also similar to renowned athletes in terms of physical fitness and achievements.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find a list of all gym members who are currently active with at least 12 months of membership, but only those that are also similar to renowned athletes in terms of physical fitness and achievements.",
        "target_collection": "GymMembers",
        "search_query": "renowned athletes in terms of physical fitness and achievements",
        "integer_property_filter": {
          "property_name": "membershipLength",
          "operator": ">=",
          "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find a list of all gym members who are currently active with at least 12 months of membership, but only those that are also similar to renowned athletes in terms of physical fitness and achievements.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": "true, membershipLength:>=:12"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 350,
      "database_schema_index": 5,
      "natural_language_query": "Find all available fitness classes similar to 'yoga meditation' that have a duration greater than 45 minutes and are currently available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available fitness classes similar to 'yoga meditation' that have a duration greater than 45 minutes and are currently available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga meditation",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '45,isAvailable:=:true'"
    },
    {
      "query_index": 351,
      "database_schema_index": 5,
      "natural_language_query": "Find all recently advertised gym memberships that are exactly 12 months long but less frequent for inactive members while showing what others have searched for at the gym related to inactive customers.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all recently advertised gym memberships that are exactly 12 months long but less frequent for inactive members while showing what others have searched for at the gym related to inactive customers.",
        "target_collection": "GymMembers",
        "search_query": "inactive customers",
        "integer_property_filter": {
          "property_name": "membershipLength",
          "operator": "=",
          "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all recently advertised gym memberships that are exactly 12 months long but less frequent for inactive members while showing what others have searched for at the gym related to inactive customers.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "membershipLength",
          "operator": "=",
          "value": "12, isActive:false"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 352,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes that are currently available, have a duration longer than 30 minutes, and compute the average duration of these classes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes that are currently available, have a duration longer than 30 minutes, and compute the average duration of these classes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isAvailable:=true"
    },
    {
      "query_index": 353,
      "database_schema_index": 5,
      "natural_language_query": "Find all available fitness classes that are 30 minutes long and return the total number of these classes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that are 30 minutes long and return the total number of these classes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that are 30 minutes long and return the total number of these classes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 30.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 354,
      "database_schema_index": 5,
      "natural_language_query": "Find all of the available fitness classes with a duration of less than 60 minutes and check which classes have words similar to 'yoga' in their name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all of the available fitness classes with a duration of less than 60 minutes and check which classes have words similar to 'yoga' in their name.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all of the available fitness classes with a duration of less than 60 minutes and check which classes have words similar to 'yoga' in their name.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 355,
      "database_schema_index": 5,
      "natural_language_query": "Show me all available fitness classes that last more than 45 minutes and also include details like the count of each class type.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all available fitness classes that last more than 45 minutes and also include details like the count of each class type.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": ""
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "COUNT"
        },
        "text_property_aggregation": {
          "property_name": "className",
          "metrics": "COUNT",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "className"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me all available fitness classes that last more than 45 minutes and also include details like the count of each class type.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 356,
      "database_schema_index": 5,
      "natural_language_query": "Find all available fitness classes that last for more than 45 minutes and group them by duration to see how many classes of each duration are available. Additionally, determine the percentage of classes that are available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that last for more than 45 minutes and group them by duration to see how many classes of each duration are available. Additionally, determine the percentage of classes that are available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isAvailable",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "durationMinutes"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all available fitness classes that last for more than 45 minutes and group them by duration to see how many classes of each duration are available. Additionally, determine the percentage of classes that are available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 357,
      "database_schema_index": 5,
      "natural_language_query": "Find the average length of gym memberships in FitnessMembers, and group the results by active memberships, while filtering for memberships longer than 12 months.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average length of gym memberships in FitnessMembers, and group the results by active memberships, while filtering for memberships longer than 12 months.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "membershipLength",
          "operator": ">",
          "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
          "property_name": "membershipLength",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isActive",
          "metrics": "TYPE"
        },
        "groupby_property": "isActive"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average length of gym memberships in FitnessMembers, and group the results by active memberships, while filtering for memberships longer than 12 months.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "membershipLength",
          "operator": ">",
          "value": 12.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 358,
      "database_schema_index": 5,
      "natural_language_query": "Find all certified fitness trainers who are currently handling more than 10 clients and organize the results by the number of clients they are handling.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all certified fitness trainers who are currently handling more than 10 clients and organize the results by the number of clients they are handling.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "clientsHandled"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCertified:=true"
    },
    {
      "query_index": 359,
      "database_schema_index": 5,
      "natural_language_query": "Find all classes that are currently available and have a duration longer than 60 minutes, summarizing how many of these classes exist.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all classes that are currently available and have a duration longer than 60 minutes, summarizing how many of these classes exist.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all classes that are currently available and have a duration longer than 60 minutes, summarizing how many of these classes exist.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,durationMinutes:>:60"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 360,
      "database_schema_index": 5,
      "natural_language_query": "Find all certified fitness trainers who currently handle more than 5 clients and check which fitness classes they are available for, focusing only on 60-minute classes. If a class name contains the word 'Yoga', include it as well. Also, calculate the total number of trainers who meet these criteria.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all certified fitness trainers who currently handle more than 5 clients and check which fitness classes they are available for, focusing only on 60-minute classes. If a class name contains the word 'Yoga', include it as well. Also, calculate the total number of trainers who meet these criteria.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": {
          "property_name": "trainerName",
          "operator": "LIKE",
          "value": "Certified"
        },
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "clientsHandled",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCertified:=true"
    },
    {
      "query_index": 361,
      "database_schema_index": 5,
      "natural_language_query": "Provide a list of all fitness classes that have the word 'Yoga' in their name, last at least 60 minutes, and that are currently available, and calculate the average duration.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Provide a list of all fitness classes that have the word 'Yoga' in their name, last at least 60 minutes, and that are currently available, and calculate the average duration.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "%Yoga%"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Provide a list of all fitness classes that have the word 'Yoga' in their name, last at least 60 minutes, and that are currently available, and calculate the average duration.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 362,
      "database_schema_index": 5,
      "natural_language_query": "Provide a list of fitness classes currently available, with their durations longer than 45 minutes, and where the class name exactly matches 'Yoga'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Provide a list of fitness classes currently available, with their durations longer than 45 minutes, and where the class name exactly matches 'Yoga'.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "=",
          "value": "Yoga"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Provide a list of fitness classes currently available, with their durations longer than 45 minutes, and where the class name exactly matches 'Yoga'.",
        "target_collection": "FitnessClasses",
        "search_query": "Yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 45.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 363,
      "database_schema_index": 5,
      "natural_language_query": "Find all currently available fitness classes that last less than 60 minutes and have the word 'yoga' in their name.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all currently available fitness classes that last less than 60 minutes and have the word 'yoga' in their name.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "%yoga%"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all currently available fitness classes that last less than 60 minutes and have the word 'yoga' in their name.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 364,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness trainers with the name 'John Smith' who are certified and have more than 10 clients currently.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness trainers with the name 'John Smith' who are certified and have more than 10 clients currently.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": {
          "property_name": "trainerName",
          "operator": "=",
          "value": "John Smith"
        },
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all fitness trainers with the name 'John Smith' who are certified and have more than 10 clients currently.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 365,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes containing the word 'Yoga' in the class name, where classes are at least 60 minutes long and are currently available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes containing the word 'Yoga' in the class name, where classes are at least 60 minutes long and are currently available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "%Yoga%"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all fitness classes containing the word 'Yoga' in the class name, where classes are at least 60 minutes long and are currently available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 366,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes that have the exact name 'Yoga Bliss', are shorter than 60 minutes, and are currently available for booking.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes that have the exact name 'Yoga Bliss', are shorter than 60 minutes, and are currently available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "=",
          "value": "Yoga Bliss"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all fitness classes that have the exact name 'Yoga Bliss', are shorter than 60 minutes, and are currently available for booking.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "className",
          "operator": "=",
          "value": "'Yoga Bliss', durationMinutes:<:60, isAvailable:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 367,
      "database_schema_index": 5,
      "natural_language_query": "Show me all currently available fitness classes named 'Yoga Basics' that last exactly 60 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all currently available fitness classes named 'Yoga Basics' that last exactly 60 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "=",
          "value": 60
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "=",
          "value": "Yoga Basics"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Unsupported operator: ='Yoga Basics',durationMinutes"
    },
    {
      "query_index": 368,
      "database_schema_index": 5,
      "natural_language_query": "Show me all the certified fitness trainers who handle more than 10 clients, group them by the number of clients they handle and tell me the total number of trainers in each group.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all the certified fitness trainers who handle more than 10 clients, group them by the number of clients they handle and tell me the total number of trainers in each group.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "clientsHandled",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "clientsHandled"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCertified:=true"
    },
    {
      "query_index": 369,
      "database_schema_index": 5,
      "natural_language_query": "Find certified fitness trainers who handle at least 10 clients and provide a comprehensive report on their client handling statistics including the average, median, and mode of clients handled by all trainers.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find certified fitness trainers who handle at least 10 clients and provide a comprehensive report on their client handling statistics including the average, median, and mode of clients handled by all trainers.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">=",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "clientsHandled",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find certified fitness trainers who handle at least 10 clients and provide a comprehensive report on their client handling statistics including the average, median, and mode of clients handled by all trainers.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": "true,clientsHandled:>=:10"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.75,
      "error": null
    },
    {
      "query_index": 370,
      "database_schema_index": 5,
      "natural_language_query": "Search for fitness classes that are currently available, have names similar to 'yoga', and last less than 60 minutes, then group the results by duration to understand the distribution of class lengths.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Search for fitness classes that are currently available, have names similar to 'yoga', and last less than 60 minutes, then group the results by duration to understand the distribution of class lengths.",
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": "<",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "durationMinutes"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Search for fitness classes that are currently available, have names similar to 'yoga', and last less than 60 minutes, then group the results by duration to understand the distribution of class lengths.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.8,
      "error": null
    },
    {
      "query_index": 371,
      "database_schema_index": 5,
      "natural_language_query": "Identify all fitness classes that are currently available for booking, are similar to the \"High Intensity Interval Training\" class, and have a duration greater than or equal to 45 minutes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Identify all fitness classes that are currently available for booking, are similar to the \"High Intensity Interval Training\" class, and have a duration greater than or equal to 45 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": "High Intensity Interval Training",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">=",
          "value": 45
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Identify all fitness classes that are currently available for booking, are similar to the \"High Intensity Interval Training\" class, and have a duration greater than or equal to 45 minutes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,durationMinutes:>:=45"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 372,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes named 'Yoga' which are currently available and calculate how many such classes are there.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes named 'Yoga' which are currently available and calculate how many such classes are there.",
        "target_collection": "FitnessClasses",
        "search_query": "Yoga",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all fitness classes named 'Yoga' which are currently available and calculate how many such classes are there.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "'Yoga', isAvailable:=:true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 373,
      "database_schema_index": 5,
      "natural_language_query": "Find the average number of clients handled by each certified fitness trainer.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average number of clients handled by each certified fitness trainer.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "clientsHandled",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "trainerName"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isCertified:=true"
    },
    {
      "query_index": 374,
      "database_schema_index": 5,
      "natural_language_query": "Find fitness classes that are available right now and have a duration of more than 30 minutes. Also, summarize how many of these classes exist.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find fitness classes that are available right now and have a duration of more than 30 minutes. Also, summarize how many of these classes exist.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find fitness classes that are available right now and have a duration of more than 30 minutes. Also, summarize how many of these classes exist.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 375,
      "database_schema_index": 5,
      "natural_language_query": "Show me all active gym members who have memberships longer than 12 months and group them by whether they are currently active.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me all active gym members who have memberships longer than 12 months and group them by whether they are currently active.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "membershipLength",
          "operator": ">",
          "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isActive",
          "metrics": "COUNT"
        },
        "groupby_property": "isActive"
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "Invalid condition: isActive:=true"
    },
    {
      "query_index": 376,
      "database_schema_index": 5,
      "natural_language_query": "Find the average duration of fitness classes that are currently available, only considering classes named similar to 'Yoga'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find the average duration of fitness classes that are currently available, only considering classes named similar to 'Yoga'.",
        "target_collection": "FitnessClasses",
        "search_query": "Yoga",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 0
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "durationMinutes",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find the average duration of fitness classes that are currently available, only considering classes named similar to 'Yoga'.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 377,
      "database_schema_index": 5,
      "natural_language_query": "Calculate the average number of clients handled by certified fitness trainers where the number of clients is above 5.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Calculate the average number of clients handled by certified fitness trainers where the number of clients is above 5.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": {
          "property_name": "clientsHandled",
          "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Calculate the average number of clients handled by certified fitness trainers where the number of clients is above 5.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 378,
      "database_schema_index": 5,
      "natural_language_query": "For each fitness class that is currently available and lasts more than 30 minutes, aggregate the results by class name to count how many classes have the same name, and list the top three most occurring class names for the available fitness classes.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "For each fitness class that is currently available and lasts more than 30 minutes, aggregate the results by class name to count how many classes have the same name, and list the top three most occurring class names for the available fitness classes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "className",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": "className"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "For each fitness class that is currently available and lasts more than 30 minutes, aggregate the results by class name to count how many classes have the same name, and list the top three most occurring class names for the available fitness classes.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true,durationMinutes:>:30"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 379,
      "database_schema_index": 5,
      "natural_language_query": "Generate a report on the most common fitness class names currently being offered.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Generate a report on the most common fitness class names currently being offered.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": "true"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
          "property_name": "className",
          "metrics": "TOP_OCCURRENCES",
          "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Generate a report on the most common fitness class names currently being offered.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 380,
      "database_schema_index": 5,
      "natural_language_query": "Find all gym members who have an active membership and provide me with the total count of active members versus inactive ones.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all gym members who have an active membership and provide me with the total count of active members versus inactive ones.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isActive",
          "metrics": "COUNT"
        },
        "groupby_property": null
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find all gym members who have an active membership and provide me with the total count of active members versus inactive ones.",
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isActive",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 1.0,
      "error": null
    },
    {
      "query_index": 381,
      "database_schema_index": 5,
      "natural_language_query": "Show me the percentage of fitness trainers who are certified and break it down by the number of clients they handle, including only those currently handling more than 10 clients.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Show me the percentage of fitness trainers who are certified and break it down by the number of clients they handle, including only those currently handling more than 10 clients.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isCertified",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
          "property_name": "isCertified",
          "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "clientsHandled"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Show me the percentage of fitness trainers who are certified and break it down by the number of clients they handle, including only those currently handling more than 10 clients.",
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "clientsHandled",
          "operator": ">",
          "value": 10.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.9,
      "error": null
    },
    {
      "query_index": 382,
      "database_schema_index": 5,
      "natural_language_query": "Find me all fitness classes with the word 'Yoga' in the class name, that are longer than 30 minutes and currently available. Group the results by class duration to check how many classes fall under each duration bucket.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find me all fitness classes with the word 'Yoga' in the class name, that are longer than 30 minutes and currently available. Group the results by class duration to check how many classes fall under each duration bucket.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 30
        },
        "text_property_filter": {
          "property_name": "className",
          "operator": "LIKE",
          "value": "Yoga"
        },
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "durationMinutes"
      },
      "predicted_query": {
        "corresponding_natural_language_query": "Find me all fitness classes with the word 'Yoga' in the class name, that are longer than 30 minutes and currently available. Group the results by class duration to check how many classes fall under each duration bucket.",
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "ast_score": 0.65,
      "error": null
    },
    {
      "query_index": 383,
      "database_schema_index": 5,
      "natural_language_query": "Find all fitness classes that are longer than 60 minutes, are currently available, and show classes similar to 'Pilates'.",
      "ground_truth_query": {
        "corresponding_natural_language_query": "Find all fitness classes that are longer than 60 minutes, are currently available, and show classes similar to 'Pilates'.",
        "target_collection": "FitnessClasses",
        "search_query": "Pilates",
        "integer_property_filter": {
          "property_name": "durationMinutes",
          "operator": ">",
          "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
          "property_name": "isAvailable",
          "operator": "=",
          "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null
      },
      "predicted_query": null,
      "ast_score": 0.0,
      "error": "could not convert string to float: '60,isAvailable:=:true'"
    }
  ]
}