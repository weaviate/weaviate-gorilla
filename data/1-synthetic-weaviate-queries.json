[
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find dishes that are vegetarian and sort them by price.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all vegetarian dishes from the menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes that are priced at 20 or less from the RestaurantMenu collection."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Show all vegetarian dishes.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List all dishes that are vegetarian from the restaurant menu."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "ExperienceYears",
            "operator": ">=",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve staff members who have 5 or more years of experience."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes from the RestaurantMenu collection that are priced at 15 or less."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes in the RestaurantMenu collection that have a price greater than 20."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List all dishes on the restaurant menu that are priced under $20."
    },
    {
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalAmount",
            "operator": ">",
            "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only customer orders where the total amount is greater than 100."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "%pasta%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEDIAN"
        },
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsVegetarian",
        "corresponding_natural_language_query": "Find all vegetarian dishes that cost 20 dollars or less and group them by vegetarian status. Additionally, aggregate the median price of these dishes and determine the most commonly occurring dish names."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "vegetarian dishes under a specific price",
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 15
        },
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "%salad%"
        },
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results for vegetarian dishes under $15 with 'salad' in the name using a combination of vector embedding methods and keyword match algorithms. Only return objects that match a condition on the text-valued property. Aggregate the values of the text-valued property to find the most frequently named dishes."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "vegetarian pizza",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "pizza"
        },
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find vegetarian dishes with names similar to 'pizza' in the restaurant menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "%chicken%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes on the restaurant menu where the dish name contains the word 'chicken'."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "v%C3%A9g%C3%A9tarien"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find dishes with names that include 'v\u00e9g\u00e9tarien' and count the occurrences of such dish names, also count how many are marked as vegetarian."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find vegetarian dishes on the menu.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find vegetarian dishes on the menu."
    },
    {
        "target_collection": "CustomerOrders",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "CustomerName",
            "operator": "LIKE",
            "value": "John%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all customer orders where the customer's name starts with 'John'. Only return objects that match this condition on a text-valued property."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all dishes from the restaurant menu that are vegetarian."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects from the RestaurantMenu collection where the dish is vegetarian."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsOnDuty",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 10.0
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "DishName",
        "corresponding_natural_language_query": "Fetch all vegetarian dishes from the restaurant menu that are priced above $10, and count the total number of these vegetarian dishes."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "DishName",
        "corresponding_natural_language_query": "Aggregate the values of a boolean-valued property and only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "List all the dishes that are vegetarian and count how many vegetarian dishes are available."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all vegetarian dishes from the restaurant menu collection."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all vegetarian dishes in the restaurant menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "%seafood%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a keyword match algorithm."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "Spaghetti"
        },
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "SUM"
        },
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": "DishName",
        "corresponding_natural_language_query": "Find the sum of the prices of vegetarian dishes named like Spaghetti with prices over 10. Also, find the top 3 most common dish names."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "Price",
        "corresponding_natural_language_query": "Group the vegetarian dishes by their price and count how many dishes are in each price group."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the number of vegetarian dishes priced over $20."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEAN"
        },
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "Price",
        "corresponding_natural_language_query": "List all dishes from the restaurant menu where the price is less than or equal to $15, and calculate the average price of these dishes. Also, provide a count of how many different dishes are available and the total number of vegetarian dishes from these results, grouping the output by the price of the dishes."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 20.0
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Count the number of vegetarian dishes that are priced at or below $20."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 20
        },
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "%Pasta%"
        },
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "Price",
        "corresponding_natural_language_query": "Find vegetarian dishes that cost less than $20 and have names containing 'Pasta'. Group the results by price and get the top 3 most common dish names. What percentage of these dishes are vegetarian?"
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find vegetarian dishes priced under $20",
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "DishName",
        "corresponding_natural_language_query": "Show me all vegetarian dishes on the menu that cost $20 or less."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "=",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return dishes from the restaurant menu where the price is exactly 20."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 15.0
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve dishes from the restaurant menu that are priced below $15."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 20
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes on the restaurant menu that have a price greater than 20."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return dishes from the restaurant menu where the price is greater than 10."
    },
    {
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalAmount",
            "operator": ">",
            "value": 100
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "CustomerName",
        "corresponding_natural_language_query": "Only return orders where the total amount is greater than 100 and group the results by customer name."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "ExperienceYears",
            "operator": ">=",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsOnDuty",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return staff members who have at least 5 years of experience and aggregate the total number of staff members who are currently on duty."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find all dishes within the RestaurantMenu collection.",
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 15
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes that cost less than $15."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes from the restaurant menu where the price is greater than or equal to $10."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "Spaghetti"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "=",
            "value": "Lasagna"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the dishes that have the exact name 'Lasagna' from the restaurant menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "Salad"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return dishes from the menu whose name includes 'Salad'."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "LIKE",
            "value": "Spaghetti"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all the dishes in the restaurant menu where the dish name contains the word 'Spaghetti'."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "=",
            "value": "Spaghetti Carbonara"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all dishes from the restaurant menu that have the name 'Spaghetti Carbonara'."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "=",
            "value": "Spaghetti Bolognese"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return dishes that have the name 'Spaghetti Bolognese'."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find all vegetarian dishes.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only dishes that are vegetarian."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "=",
            "value": "Spaghetti Carbonara"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the dish named 'Spaghetti Carbonara' in the restaurant menu collection."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": "Find all staff members",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsOnDuty",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return staff members who are currently on duty."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsOnDuty",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only staff members who are currently on duty."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": "Find all vegetarian dishes",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes in the RestaurantMenu collection where the IsVegetarian property is true."
    },
    {
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsTakeaway",
            "operator": "=",
            "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the orders that are not for takeaway."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the vegetarian dishes from the restaurant menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find out how many vegetarian dishes are available on the restaurant menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List all vegetarian dishes available on the menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all vegetarian dishes on the restaurant menu."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes in the restaurant menu with a price greater than $10."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "ExperienceYears",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "ExperienceYears",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the maximum number of experience years among staff members who have more than 5 years of experience."
    },
    {
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalAmount",
            "operator": ">",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "CustomerName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "CustomerName",
        "corresponding_natural_language_query": "Find orders where the total amount exceeds $50 and display the top 5 most frequent customers who place such orders, grouping results by customer name."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "DishName",
            "operator": "=",
            "value": "Pasta"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "DishName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most frequently occurring dish names in the restaurant menu where the dish name is exactly 'Pasta'."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVegetarian",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVegetarian",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "DishName",
        "corresponding_natural_language_query": "Retrieve all vegetarian dishes from the restaurant menu, count how many are vegetarian, and group the results by the dish name."
    },
    {
        "target_collection": "StaffMembers",
        "search_query": "Get all staff members who are currently not on duty and group them by whether they have more than 5 years of experience.",
        "integer_property_filter": {
            "property_name": "ExperienceYears",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsOnDuty",
            "operator": "=",
            "value": false
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsOnDuty",
            "metrics": "COUNT"
        },
        "groupby_property": "ExperienceYears",
        "corresponding_natural_language_query": "Get a count of staff members who are not currently on duty and have more than 5 years of experience, and group them by their experience years."
    },
    {
        "target_collection": "CustomerOrders",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "CustomerName",
        "corresponding_natural_language_query": "Group the results by the property CustomerName to organize orders based on customer names."
    },
    {
        "target_collection": "RestaurantMenu",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all dishes on the restaurant menu that are priced below $30."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find patients assigned to critical condition but below the critical age threshold for immediate observational admission.",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all patients in critical condition who are younger than 60 years old."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 18
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return a list of patients who are 18 years old or older."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the patients who are 65 years old or older."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PatientName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the number of critical patients over the age of 65 in the hospital."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find patients who are in critical condition",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are currently in a critical condition in the hospital."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are over the age of 65."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Group the list of patients by their critical status and count the number of patients in each group."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find patients in critical condition who are above 60 years old, and aggregate the results to determine common trends or patterns related to age and condition status."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 18
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are minors (under the age of 18) in the hospital records."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "critical patients",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find details of all patients who are in critical condition and aged 65 or older, and also count how many such critical patients there are."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find all patients",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "%Smith%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients whose name includes 'Smith'. This uses a text-based LIKE query for partial matches."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Identify patients who are marked as critical and find the one with the highest age among them.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Identify patients who are marked as critical and find the one with the highest age among them."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "John%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "critical patients aged above 50",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve information of patients who are in critical condition and are older than 50 years."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 60
        },
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "=",
            "value": "John Doe"
        },
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "COUNT"
        },
        "groupby_property": "Age",
        "corresponding_natural_language_query": "Find patients who are 60 years old or older, named 'John Doe', and in critical condition. Calculate the mean age and count the number of critical cases, grouping the results by age."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "John%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return patients whose names start with 'John'."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve the most relevant patient records using a combination of vector embedding techniques and keyword searches."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 18
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all critical adult patients currently admitted in the hospital."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are in critical condition."
    },
    {
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsOccupied",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsOccupied",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "RoomID",
        "corresponding_natural_language_query": "Aggregate the percentage of occupied hospital rooms, and group the results by room ID to see the occupancy status of each room."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are in critical condition and count the total number of critical cases."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find patients where their names match 'John' using keyword matching and prioritize the search results based on relevance.",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "John"
        },
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Find the oldest critical patients named John and group them by their critical status."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all hospital patients who are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 50
        },
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "John%"
        },
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Get the mean age of critical patients named starting with 'John' above 50 years old, grouped by their critical status."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "Smith"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Find the total number of critical patients with the last name 'Smith' older than 65 years and calculate the average age of such patients."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "critical",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "John%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Find the average age of all patients whose name starts with 'John' and who are 65 years old or older, grouped by whether they are in critical condition or not."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find all patients who are in critical condition and analyze patient ages.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Show me the average age of all patients who are currently in a critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "COUNT"
        },
        "groupby_property": "Age",
        "corresponding_natural_language_query": "Group the patients by their age and aggregate to count the number of patients who are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "%John%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients whose names contain 'John'."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "find patients who are at or over 65 years old and are in critical condition",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are aged 65 or older and are marked as being in critical condition in the hospital."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Age",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Calculate the average age of patients who are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are over the age of 60."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find all patients older than 65 and require critical attention",
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are older than 65 and are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are younger than 65 years old."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 40
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve patients whose age is less than 40."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "COUNT"
        },
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Return the count of critical and non-critical patients grouped by their critical status, limited to patients under the age of 65."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return patients who are 65 years old or older."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Return all patients older than 65 years and group the results by whether they are categorized as critical or not."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all patients who are younger than 50 years old."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return a list of all patients who are at least 65 years old."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "reference_object"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "=",
            "value": "John Doe"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve the information of patients whose name is exactly 'John Doe' from the HospitalPatients collection."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "=",
            "value": "John Doe"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve details of patients whose name is exactly 'John Doe'."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "Smith"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only patients whose names include 'Smith'."
    },
    {
        "target_collection": "HospitalRooms",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "RoomID",
            "operator": "LIKE",
            "value": "ICU%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all hospital room entries where the RoomID starts with 'ICU', indicating they are part of the Intensive Care Unit."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": "<",
            "value": 18
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Retrieve all patients who are under 18 years old and group them by their critical status."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "=",
            "value": "John Doe"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the patients whose name is exactly 'John Doe' from the HospitalPatients collection."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only patients who are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Find all patients who are in critical condition to prioritize their care.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are in critical condition to prioritize their care."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property: Retrieve all patients who are in critical condition (IsCritical is true)."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PatientName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve the names of patients who are in critical condition and find out which patient names are the most common among these critical patients."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only patients who are in a critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Retrieve only the patients from the HospitalPatients collection who are in critical condition. Also, group the results by their critical status."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only patients that are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve only the patients who are in critical condition from the HospitalPatients collection."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "Find all patients in the hospital who are older than 65 and list them grouped by whether they are in critical condition or not."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients who are older than 65 years."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": "Retrieve all patients.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PatientName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most common patient names."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PatientName",
            "operator": "LIKE",
            "value": "A%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients whose names start with the letter 'A'."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "Age",
        "corresponding_natural_language_query": "Find all patients who are older than 60 years and are in critical condition, and group the results by the patients' age."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCritical",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "List all patients in critical condition and show the total number of such patients."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 65
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsCritical",
        "corresponding_natural_language_query": "List all patients aged 65 or older and group the results by whether they are in critical condition."
    },
    {
        "target_collection": "HospitalPatients",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Age",
            "operator": ">=",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCritical",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all patients in the hospital who are older than or equal to 60 years and are in a critical condition."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": "=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return albums that have exactly 10 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find music albums that are highly relevant to a given search query by using both vector embedding and keyword matching methods."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "rock"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all the albums with titles containing the word 'rock', and count the number of tracks in these albums."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most frequent album titles in the MusicAlbums collection."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "search term"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Filter the albums where the title is similar to 'search term'."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "combination of vector embedding methods and keyword match algorithms",
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsReleased",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find music albums relevant to a search query using a combination of vector embedding methods and keyword match algorithms. Only return albums with more than 5 tracks. Aggregate the percentage of released albums."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "search query"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Only return objects that match a condition on an integer-valued property. Group the results by a property."
    },
    {
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalAlbums",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find artist profiles where the artist has released more than 5 albums."
    },
    {
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalAlbums",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": {
            "property_name": "ArtistName",
            "operator": "=",
            "value": "John Doe"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TotalAlbums",
            "metrics": "SUM"
        },
        "text_property_aggregation": {
            "property_name": "ArtistName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsActive",
        "corresponding_natural_language_query": "Find artists named 'John Doe' with more than 5 albums. Sum their total albums and count how often each artist name occurs. Group the results by whether the artists are active."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks and calculate the average number of tracks in these albums."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": "combined query of vector embedding methods and keyword match algorithms",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "Rock Fest"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsSoldOut",
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Only return objects that match a condition on a text-valued property. Aggregate the values of a text-valued property. Group the results by a property."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%Classic%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find music albums where the title includes the word 'Classic', and list the top 5 most common album titles that include this word."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%Best Hits%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve music albums which contain the phrase 'Best Hits' in their titles."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "Find albums that have a title containing the word 'Love'.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%Love%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Only return objects that match a condition on a text-valued property. Aggregate the values of a boolean-valued property."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "The Rolling Stones",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Rolling"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums with titles that contain the word 'Rolling'."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "search for music albums where the album title contains the word 'Greatest Hits' and is released",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Greatest Hits"
        },
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums with 'Greatest Hits' in the title that have been released."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TicketSales",
            "operator": ">=",
            "value": 5000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all concert events that have sold at least 5000 tickets and are sold out."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return music albums that have been officially released."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of a text-valued property."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "relax",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 1
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Only return albums that are released. Aggregate the titles of albums with text value."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "most relevant",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsReleased",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "AlbumTitle",
        "corresponding_natural_language_query": "Find albums that have been officially released, count how many have been released, and group the results by album title."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsReleased",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the number of music albums that have been officially released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "TrackCount",
        "corresponding_natural_language_query": "Find all released music albums and group them by the number of tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums that have been officially released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "greatest hits",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%greatest hits%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "AlbumTitle",
        "corresponding_natural_language_query": "Find albums in the MusicAlbums collection with titles that include the phrase 'greatest hits', aggregate the maximum number of tracks ('TrackCount'), and group the results by 'AlbumTitle'."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of an integer-valued property."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": "album",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%album%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the music albums where the album title contains the word 'album'."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "search text"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most common album titles that match a specific search text."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Greatest Hits"
        },
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsReleased",
        "corresponding_natural_language_query": "Find all music albums with more than 10 tracks whose title contains 'Greatest Hits' and are officially released. Count how many such albums are there and group the results by their release status."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsReleased",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "How many of the music albums have been officially released?"
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%relevant%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "AlbumTitle",
        "corresponding_natural_language_query": "Find the album with the most number of tracks that are relevant to a search query using a combination of vector embedding methods and keyword match algorithms. Group the results by AlbumTitle."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%search%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 1
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Finds the most relevant result to a search query using a combination of vector embedding methods and keyword match algorithms."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all music albums that have more than 10 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": "<",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums that have fewer than 5 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve music albums from the MusicAlbums collection that have more than 10 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return the top 5 most common album titles for albums that have more than 10 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "AlbumTitle",
        "corresponding_natural_language_query": "Find all music albums that have more than 10 tracks and group the results by album title."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only MusicAlbums where the TrackCount is greater than or equal to 10."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": "<",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "AlbumTitle",
        "corresponding_natural_language_query": "Return only albums with fewer than 10 tracks and group the results by album title."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find only albums that have more than 10 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "greatest hits"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "Artist",
        "corresponding_natural_language_query": "Find all music albums whose title contains 'greatest hits', count how many albums have titles with this phrase, and group the results by the artist."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Greatest Hits"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return music albums where the album title contains 'Greatest Hits', and aggregate the total number of tracks for these albums."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%Jazz%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find music albums where the album title contains the word 'Jazz'."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Greatest Hits"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return music albums whose titles include the phrase 'Greatest Hits'."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Greatest Hits"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all music albums where the album title contains the text 'Greatest Hits'."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%Festival%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsSoldOut",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all concert events with names containing the word 'Festival' and count how many of these events are sold out."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "%Greatest Hits%"
        },
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums that have 10 or more tracks, with titles containing 'Greatest Hits', and are officially released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "AlbumTitle",
            "operator": "LIKE",
            "value": "Greatest Hits"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all the music albums that have 'Greatest Hits' in their album title."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return concert events that are sold out."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all concert events that are sold out."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only concerts that are sold out."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only music albums that have been released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums that have been officially released."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return the concert events that are marked as sold out."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Fetch all music albums that have been officially released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsReleased",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums that have been officially released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TrackCount",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsReleased",
        "corresponding_natural_language_query": "Find the total number of tracks for albums with more than 12 tracks, and group these results by whether the album is released."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all albums that have more than 10 tracks."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "AlbumTitle",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsReleased",
        "corresponding_natural_language_query": "Find music albums with more than 10 tracks, displaying the top 5 most common album titles and grouping the results by release status."
    },
    {
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalAlbums",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ArtistName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the top 5 most occurring artist names for artists who have released more than 10 albums."
    },
    {
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsActive",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsActive",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "TotalAlbums",
        "corresponding_natural_language_query": "Retrieve the percentage of active artists, and group the results by the total number of albums they have released."
    },
    {
        "target_collection": "ConcertEvents",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSoldOut",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsSoldOut",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the total number of concert events that are sold out by evaluating the values of the IsSoldOut property."
    },
    {
        "target_collection": "ArtistProfiles",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsActive",
        "corresponding_natural_language_query": "Group artists by their active status to understand how many are currently performing versus not."
    },
    {
        "target_collection": "MusicAlbums",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TrackCount",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all music albums that have more than 10 tracks."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsAvailable",
        "corresponding_natural_language_query": "Group the search results of travel packages by availability for packages priced at $1000 or less, and identify the top 5 occurrences of package names."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEAN"
        },
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsAvailable",
        "corresponding_natural_language_query": "Aggregate the mean price of all available travel packages that cost less than or equal to $2000 and count how many packages are available based on their names."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 1500
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all travel packages where the price is less than 1500."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the travel packages with a price greater than 1000."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find travel packages that best match the keyword 'beach resort' using vector embedding and keyword match algorithms to refine the search."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "*se*"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages where the package name contains the substring \"se\"."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find travel packages that best match a specific search description using both keyword and semantic search methods."
    },
    {
        "target_collection": "Travelers",
        "search_query": "Only return objects that match a condition on an integer-valued property.",
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": "=",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travelers who have made exactly 5 total bookings."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "%island%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that contain the word 'island' in their package name."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all available travel packages that cost less than $1000."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find travel packages with the name 'Adventure Tour'.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "Adventure Tour"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "%'Italy'%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that have 'Italy' in the package name."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find travel packages that include luxury in their description",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "%luxury%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that are priced above 1000."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "%Deluxe%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find travel packages where the package name contains the word 'Deluxe'."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve travel packages with a price of $1000 or less."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Calculate the average price of travel packages that cost 1000 or less."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 500
        },
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "=",
            "value": "Beach Escape"
        },
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all available 'Beach Escape' travel packages that cost less than or equal to $500 and calculate the total cost of these packages."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that are available and have a price less than 1000."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find travel packages",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that are currently available."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsPopularDestination",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsPopularDestination",
            "metrics": "COUNT"
        },
        "groupby_property": "CountryName",
        "corresponding_natural_language_query": "Aggregate the values of a boolean-valued property and group the results by a property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Vacation in Greece",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms, and only return objects that match a condition on a boolean-valued property. Aggregate the values of a boolean-valued property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages where the price is greater than $1000."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of an integer-valued property."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "VisitorCount",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of an integer-valued property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "%search%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "PackageName",
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Aggregate the values of a text-valued property. Group the results by a property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find travel packages with custom vector embedding to identify the most relevant ones for a combination of search criteria.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms, then aggregate the values of a text-valued property."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Count the total number of travel packages that are available."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of the boolean-valued property 'IsAvailable' in the TravelPackages collection to determine how many travel packages are currently available."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "PackageName",
        "corresponding_natural_language_query": "Group the results by travel package names and find the average price for each package."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": "Find the most relevant travel packages that are currently available and within a specific price range using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 2000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "PackageName",
        "corresponding_natural_language_query": "Find travel packages that are available and cost less than or equal to $2000 while identifying the top occurring package names based on a combination of embedding vector relevance and keyword match."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsAvailable",
        "corresponding_natural_language_query": "Find all travel packages where the price is greater than $1000, calculate the mean price of these packages, and group the results by their availability status."
    },
    {
        "target_collection": "Travelers",
        "search_query": "Find travelers who have booked more than 10 times",
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TotalBookings",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on an integer-valued property. Aggregate the values of an integer-valued property."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "VisitorCount",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "CountryName",
        "corresponding_natural_language_query": "Return the countries that have been visited by more than 1000 travelers, grouping the results by the country name."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages with a price greater than 500 dollars and count the number of occurrences for each package name."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<=",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Show me all travel packages that cost less than or equal to $1000."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsFrequentFlyer",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Return the count of travelers with frequent flyer status among those who have made more than 5 bookings."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": ">=",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsFrequentFlyer",
        "corresponding_natural_language_query": "Find all travelers who have made at least 5 bookings and group the results by their frequent flyer status."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travelers who have made more than 5 bookings."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travelers who have made more than 10 bookings."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "CountryName",
            "operator": "LIKE",
            "value": "Spain"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return countries in the CountryDestinations collection whose CountryName matches the partial text 'Spain'."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "=",
            "value": "European Dream"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return travel packages where the PackageName matches 'European Dream'."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "CountryName",
            "operator": "LIKE",
            "value": "France"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "CountryName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve countries with names like 'France' and aggregate the most common occurrences of country names."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "Summer"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return travel packages where the package name contains the word 'Summer'."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "CountryName",
            "operator": "=",
            "value": "Italy"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsPopularDestination",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Return the percentage representation of countries marked as popular destinations among those which are named 'Italy'."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "PackageName",
        "corresponding_natural_language_query": "Find all travel packages that are priced below $500 and are currently available. Group these results by the package name and provide a count of how many are available in total."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": "<",
            "value": 1000
        },
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "Summer"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "Price",
            "metrics": "MIN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages where the price is less than $1000 and the package name contains 'Summer'. Also, find the minimum price among these packages."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all travel packages that are currently available."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Show me the travel packages that are currently available for booking."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsPopularDestination",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "CountryName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects in the CountryDestinations collection that match a condition on the boolean-valued property IsPopularDestination. Aggregate the values of the text-valued property CountryName to find the top 10 most common destinations among the popular ones."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "PackageName",
        "corresponding_natural_language_query": "Only return travel packages that are currently available and aggregate the total number of available travel packages, grouped by the package name."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that are currently available and count the number of available packages."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsPopularDestination",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "CountryName",
        "corresponding_natural_language_query": "Retrieve the names of countries that are marked as popular travel destinations and group the results by country names."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property, such as travel packages that are currently available."
    },
    {
        "target_collection": "CountryDestinations",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "VisitorCount",
            "operator": ">",
            "value": 10000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "VisitorCount",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsPopularDestination",
        "corresponding_natural_language_query": "Find the maximum number of visitors for countries where the visitor count is greater than 10,000 and group the results by whether it is a popular destination."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "TotalBookings",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "TravelerName",
        "corresponding_natural_language_query": "Find the average number of total bookings for travelers who have made at least 10 bookings, grouped by traveler name."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 500
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "PackageName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List the most frequently occurring travel packages with a price greater than $500."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": {
            "property_name": "PackageName",
            "operator": "LIKE",
            "value": "Luxury%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages with a name that starts with 'Luxury' and have a price greater than 1000."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 1000
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": "Price",
        "corresponding_natural_language_query": "Show me available travel packages with a price greater than $1000, group the results by price, and count the number of available packages per price."
    },
    {
        "target_collection": "TravelPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "Price",
            "operator": ">",
            "value": 3000
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travel packages that cost more than 3000 and calculate how many of them are currently available."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsFrequentFlyer",
        "corresponding_natural_language_query": "Retrieve travelers' information and group the results by their frequent flyer status."
    },
    {
        "target_collection": "Travelers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "TotalBookings",
            "operator": "=",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all travelers who have exactly 5 total bookings."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": ">=",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the catering event packages where the price per person is greater than or equal to 50."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "YearsOfExperience",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all chefs with at least 10 years of experience and calculate the average years of experience among them."
    },
    {
        "target_collection": "ClientReviews",
        "search_query": "search for recent reviews about the catering service that mention desserts",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClientName",
            "operator": "LIKE",
            "value": "%desserts%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClientName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsPositiveFeedback",
        "corresponding_natural_language_query": "Group the client reviews by whether the feedback was positive and find the most common occurrences of clients who mentioned 'desserts' in their reviews."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": ">=",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return catering event packages where the price per person is greater than or equal to 50."
    },
    {
        "target_collection": "Chefs",
        "search_query": "most relevant",
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">=",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSpecialistInDesserts",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsSpecialistInDesserts",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "ChefName",
        "corresponding_natural_language_query": "Find the most relevant chefs who have at least 5 years of experience and specialize in desserts, and aggregate the total number of dessert specialists, grouping by the chef's name."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of a boolean-valued property by counting the occurrence of catering event packages that include a vegan option."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": "<",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the price per person is less than 50."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": "=",
            "value": 25
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find catering event packages where the price per person is exactly $25 and show me the top 5 most common event names."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%search_term%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find catering event packages where the event name matches a specific text search pattern."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%wedding%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the event name contains the word 'wedding'."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%wedding%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Show me all catering event packages that contain the word 'wedding' in their name, aggregated by the most common package names."
    },
    {
        "target_collection": "Chefs",
        "search_query": "dessert specialist chef with extensive experience",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ChefName",
            "operator": "LIKE",
            "value": "%dessert%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ChefName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the top 10 most common names of chefs who specialize in desserts."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "Dinner"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the event name contains the word 'Dinner'."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%theme party%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find catering event packages that have themes related to 'party', and find out how many of these packages include a vegan option."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "concert"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Find all catering event packages relevant to concerts and show the top 5 most common event names. Also, report what percentage of these events include vegan options. Group the results by event name."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "*garden*"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find catering event packages where the event name contains the word 'garden'."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "most relevant results",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant catering event packages where vegan options are included."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List all catering event packages where a vegan option is included."
    },
    {
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "RatingScore",
            "operator": ">=",
            "value": 4
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsPositiveFeedback",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsPositiveFeedback",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "RatingScore",
        "corresponding_natural_language_query": "Return all client reviews with a rating score of 4 or more, where the feedback is positive. Additionally, group the results by rating score and count the total positive feedbacks in each group."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "Search for catering event packages that include a vegan option.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find catering event packages where a vegan option is included."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Find events where vegan options are available, count how many events have this option, and group the results by the event name."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Filter the catering event packages to show only those that include a vegan option and count how many of these packages are available."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "a search query using a combination of vector embedding methods and keyword match algorithms",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Find catering event packages that include a vegan option and are most relevant to a search query using a combination of vector embedding methods and keyword match algorithms. Group the results by event name."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "PricePerPerson",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Group the catering event packages by their names and calculate the total price per person for each event group."
    },
    {
        "target_collection": "Chefs",
        "search_query": "specializes in desserts",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ChefName",
            "operator": "LIKE",
            "value": "%s%"
        },
        "boolean_property_filter": {
            "property_name": "IsSpecialistInDesserts",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "YearsOfExperience",
            "metrics": "MEAN"
        },
        "text_property_aggregation": {
            "property_name": "ChefName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsSpecialistInDesserts",
        "corresponding_natural_language_query": "Find chefs who specialize in desserts where their name contains the letter 's'. Aggregate the average years of experience among these chefs and count how many chefs meet the criteria."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "dinner"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the top 5 most common event names that include the word 'dinner' in the CateringEventPackages collection."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most common catering event names listed in the collection."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "COUNT"
        },
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Group the results of catering event packages by the name of the event and aggregate the data to count how many of these packages include a vegan option."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the percentage of catering event packages that include a vegan option."
    },
    {
        "target_collection": "ClientReviews",
        "search_query": "search for the most relevant reviews for 'excellent service'",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClientName",
            "operator": "LIKE",
            "value": "excellent service"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "RatingScore",
            "metrics": "COUNT"
        },
        "text_property_aggregation": {
            "property_name": "ClientName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": {
            "property_name": "IsPositiveFeedback",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "IsPositiveFeedback",
        "corresponding_natural_language_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms. Group the results by a property."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "Find Catering Event Packages with 'Dinner' keyword in EventName and vegan option",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "Dinner"
        },
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find event packages for events that include the keyword 'Dinner' in their name and offer a vegan option."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all chefs who have more than 10 years of experience."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "YearsOfExperience",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all chefs with more than 5 years of experience and calculate the average years of experience among them."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": ">",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": "IsVeganIncluded",
        "corresponding_natural_language_query": "Find catering event packages where the price per person is greater than $50, aggregate the top occurrences of event names and group the result by whether a vegan option is included."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "find packages with price per person less than 50",
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": "<",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the PricePerPerson is less than 50."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">",
            "value": 5
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all chefs who have more than 5 years of experience."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": ">",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages with a price per person greater than 50 and count how many of these packages include a vegan option."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsSpecialistInDesserts",
        "corresponding_natural_language_query": "Find all chefs with more than 10 years of experience and group the results by whether they specialize in desserts."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Fetch all chefs who have 10 or more years of experience."
    },
    {
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClientName",
            "operator": "=",
            "value": "Alice"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all reviews from clients where the client's name exactly matches 'Alice'."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ChefName",
            "operator": "LIKE",
            "value": "John"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all chefs whose names contain the text 'John'."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%Summer%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a text-valued property."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "welcome"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the event name includes the word 'welcome'."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%wedding%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only event packages where the event name includes the word 'wedding'."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "=",
            "value": "Summer Gala"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the event name is 'Summer Gala' and count the total number of packages that include a vegan option."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "Annual"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Retrieve all event packages where the event name contains 'Annual' and group the results by the event name."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": "Find all event packages that include 'Wedding' in their name.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "%Wedding%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Retrieve all catering event packages where the event name includes 'Wedding'."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsSpecialistInDesserts",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "YearsOfExperience",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsSpecialistInDesserts",
        "corresponding_natural_language_query": "Find the average years of experience for chefs who specialize in desserts, and group the results by whether they are dessert specialists."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property where vegan options are included."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Return only the event packages that include a vegan option and count the number of each event name occurrence, grouping the results by the event name."
    },
    {
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsPositiveFeedback",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClientName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all client reviews where the feedback is positive and count the number of occurrences of each client name."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Find all catering event packages where the vegan option is included. Then, calculate the percentage of events where vegan options are available and group the results by event name."
    },
    {
        "target_collection": "ClientReviews",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsPositiveFeedback",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsPositiveFeedback",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all client reviews where the feedback is positive, and count how many reviews are positive."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "PricePerPerson",
        "corresponding_natural_language_query": "Retrieve catering event packages that include a vegan option and group them by price per person."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsVeganIncluded",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages that include a vegan option."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": ">",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "PricePerPerson",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "EventName",
        "corresponding_natural_language_query": "Find catering event packages where the price per person is greater than $50, and determine the event with the highest price per person, grouping results by event name."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "YearsOfExperience",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "YearsOfExperience",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Calculate the mean years of experience for chefs who have at least 10 years of experience."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "EventName",
            "operator": "LIKE",
            "value": "conference"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most common event names that contain 'conference' in the CateringEventPackages collection, and list the top 10 occurrences."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "EventName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most frequently occurring names of catering event packages in the collection to understand popularity trends."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsVeganIncluded",
            "metrics": "COUNT"
        },
        "groupby_property": "IsVeganIncluded",
        "corresponding_natural_language_query": "Group the results by the 'IsVeganIncluded' property and aggregate the values of this boolean-valued property."
    },
    {
        "target_collection": "Chefs",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsSpecialistInDesserts",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Count the number of chefs who specialize in desserts."
    },
    {
        "target_collection": "clientreviews",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsPositiveFeedback",
            "metrics": "COUNT"
        },
        "groupby_property": "RatingScore",
        "corresponding_natural_language_query": "Show me the count of positive feedback reviews grouped by the rating score."
    },
    {
        "target_collection": "CateringEventPackages",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "PricePerPerson",
            "operator": "<=",
            "value": 50
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all catering event packages where the price per person is less than or equal to $50."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find gym members who have a membership length of greater than or equal to 12 months."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "MembershipLength",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the average membership length for members who have been subscribed for one year or more."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": "<=",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Find all fitness classes that are 60 minutes or less and group the results by class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": "<=",
            "value": 60
        },
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "%Yoga%"
        },
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find available yoga classes that are 60 minutes or shorter, and aggregate the most common yoga class names offered."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">=",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that have a duration of 60 minutes or more."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all gym members who have a membership length of one year or more."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": "<",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "DurationMinutes",
            "metrics": "MEAN"
        },
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Find all available fitness classes that last less than 60 minutes, and calculate the mean duration of these classes. Also, list the top 5 most common class names and group the results by class name."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": "Find relevant results to a search query using a combination of vector embedding methods and keyword match algorithms only return objects that match a condition on an integer-valued property.",
        "integer_property_filter": {
            "property_name": "ClientsHandled",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness trainers who are handling more than or equal to 10 clients."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsActive",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "MembershipLength",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all gym members whose membership length is at least 12 months and who are currently active. Then, calculate the average length of membership among these members."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "TrainerName",
            "operator": "LIKE",
            "value": "John"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "ClientsHandled",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of the number of clients handled by trainers whose names are similar to 'John', calculating the average."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find available fitness classes that are longer than 30 minutes.",
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all available fitness classes that last longer than 30 minutes."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "yoga",
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">=",
            "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "COUNT",
            "top_occurrences_limit": 10
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find yoga fitness classes that are longer than 30 minutes and currently available for booking, and count how many different classes are there."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find yoga classes",
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "yoga"
        },
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "DurationMinutes",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Show all available yoga classes that last more than 60 minutes, and provide the average duration of these classes. Group the results by class name and count how many of them are currently available."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "*Power*"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only fitness classes that have 'Power' in their name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find fitness classes related to yoga",
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": "<=",
            "value": 60
        },
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Pilates"
        },
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "DurationMinutes",
            "metrics": "MEAN"
        },
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Find all the currently available fitness classes related to yoga or pilates that are 60 minutes or less. Calculate the average duration of these classes, count the distinct class names, and get the total number of available classes grouped by class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "*Yoga*"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes where the class name includes 'Yoga' to return relevant classes to a search query using keyword match."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCertified",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "ClientsHandled",
            "metrics": "MAX"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "TrainerName",
        "corresponding_natural_language_query": "Find trainers who are certified and have the highest number of clients, grouping the results by trainer name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find available fitness classes that are currently open for booking."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCertified",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all fitness trainers who are certified."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsActive",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all the gym members who currently have active memberships."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "PERCENTAGE_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Return the percentage of available fitness classes in the gym."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find the most relevant results to a search query using a combination of vector embedding methods and keyword match algorithms.",
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">=",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find fitness classes that are longer than or equal to 60 minutes and check if they are currently available for booking."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find fitness classes that are available for at least 60 minutes and currently open for booking.",
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">=",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Find fitness classes that are available for at least 60 minutes and currently open for booking, and group the results by the class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all available fitness classes that are currently open for booking."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 30
        },
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "DurationMinutes",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Retrieve all fitness classes longer than 30 minutes that have 'Yoga' in their name. Calculate the average duration of these classes and group the results by class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": "<=",
            "value": 60
        },
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "DurationMinutes",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Find all yoga classes that are available and are 60 minutes or less, and calculate the average duration of these classes, grouping by class name."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsActive",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsActive",
            "metrics": "COUNT"
        },
        "groupby_property": "MembershipLength",
        "corresponding_natural_language_query": "Find members who have had active memberships for more than 12 months and group the results by membership length, while also counting how many are currently active."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List all fitness classes that last more than 60 minutes."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find fitness classes related to 'yoga'.",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "%yoga%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Show me all the fitness classes related to yoga available in the collection."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Aggregate the values of the boolean-valued property 'IsAvailable' in the FitnessClasses collection to determine how many classes are currently available for booking."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": "<=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsActive",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "MembershipLength",
            "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsActive",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "IsActive",
        "corresponding_natural_language_query": "Find and count how many gym members with active memberships have their membership length less than or equal to 12 months, and group these results based on their active status."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "yoga"
        },
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find yoga classes that are currently available for booking."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that have a duration greater than 60 minutes."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return fitness classes that have a duration greater than 60 minutes."
    },
    {
        "target_collection": "GymMembers",
        "search_query": "Only return objects that match a condition on an integer-valued property.",
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all gym members who have a membership length of 12 months or more."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">",
            "value": 6
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that have a condition on an integer-valued property."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": "<",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Show me the total number of currently available fitness classes that are less than 60 minutes long, grouped by class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">=",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that have a duration of 60 minutes or more, and then aggregate to find the total number of classes that are currently available."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that are longer than 60 minutes."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": "=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all gym members whose membership length is exactly 12 months."
    },
    {
        "target_collection": "GymMembers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": "<=",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "MembershipLength",
            "metrics": "COUNT"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsActive",
        "corresponding_natural_language_query": "Find all gym members with a membership of one year or less and count these memberships, then group the results by their active status."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": {
            "property_name": "DurationMinutes",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes where the class name contains 'Yoga' and calculate the average duration of these classes in minutes."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find fitness classes that have 'Yoga' in their name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 3
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find fitness classes whose name includes 'Yoga', and also list the top 3 most frequently occurring class names."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Yoga",
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that have 'Yoga' in their name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "COUNT",
            "top_occurrences_limit": null
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Count the number of fitness classes that have names similar to 'Yoga'."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "Yoga"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes whose name includes 'Yoga'."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": {
            "property_name": "ClassName",
            "operator": "LIKE",
            "value": "%Yoga%"
        },
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes where the class name contains the word 'Yoga'."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Only return objects that match a condition on a boolean-valued property."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCertified",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "ClientsHandled",
            "metrics": "SUM"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the fitness trainers that are certified and aggregate to find out how many clients are being handled by these certified trainers in total."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "only return objects that match a condition on a boolean-valued property.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find fitness classes that are currently available for booking."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Return all fitness classes that are currently available."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "available fitness classes",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that are currently available for booking."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCertified",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCertified",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Return only the fitness trainers who are certified and count how many certified trainers there are."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Find all fitness classes that are currently available and group the results by the class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "List all fitness classes that are currently available for booking."
    },
    {
        "target_collection": "GymMembers",
        "search_query": "Find gym members whose membership length is greater than 12 months and group them by membership status.",
        "integer_property_filter": {
            "property_name": "MembershipLength",
            "operator": ">",
            "value": 12
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": "IsActive",
        "corresponding_natural_language_query": "Show me gym members who have been members for over 12 months and group them by their active/inactive status."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find fitness classes that have a duration greater than 60 minutes."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 60
        },
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that last longer than 60 minutes."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": {
            "property_name": "ClassName",
            "metrics": "TOP_OCCURRENCES",
            "top_occurrences_limit": 5
        },
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find the most frequently occurring values of the class name property in the FitnessClasses collection."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": "Find fitness classes that are available.",
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "TOTAL_TRUE"
        },
        "groupby_property": "ClassName",
        "corresponding_natural_language_query": "Retrieve all fitness classes that are currently available, and group the results by the class name."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": null,
        "text_property_filter": null,
        "boolean_property_filter": null,
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsAvailable",
            "metrics": "COUNT"
        },
        "groupby_property": null,
        "corresponding_natural_language_query": "Count the occurrences of the different values of the IsAvailable boolean property in the FitnessClasses collection."
    },
    {
        "target_collection": "FitnessTrainers",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "ClientsHandled",
            "operator": ">=",
            "value": 10
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsCertified",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": {
            "property_name": "ClientsHandled",
            "metrics": "MEAN"
        },
        "text_property_aggregation": null,
        "boolean_property_aggregation": {
            "property_name": "IsCertified",
            "metrics": "COUNT"
        },
        "groupby_property": "IsCertified",
        "corresponding_natural_language_query": "Find all certified fitness trainers who are handling at least 10 clients, and calculate the average number of clients they handle. Group the results by certification status."
    },
    {
        "target_collection": "FitnessClasses",
        "search_query": null,
        "integer_property_filter": {
            "property_name": "DurationMinutes",
            "operator": ">",
            "value": 30
        },
        "text_property_filter": null,
        "boolean_property_filter": {
            "property_name": "IsAvailable",
            "operator": "=",
            "value": true
        },
        "integer_property_aggregation": null,
        "text_property_aggregation": null,
        "boolean_property_aggregation": null,
        "groupby_property": null,
        "corresponding_natural_language_query": "Find all fitness classes that are longer than 30 minutes and currently available for booking."
    }
]